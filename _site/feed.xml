<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="http://localhost:4000/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/blog/" rel="alternate" type="text/html" /><updated>2021-10-05T14:58:19+02:00</updated><id>http://localhost:4000/blog/feed.xml</id><title type="html">Blog</title><subtitle>Edyta Jozdowska</subtitle><author><name>Jozdowska Edyta</name></author><entry><title type="html">Animacje svg</title><link href="http://localhost:4000/blog/svg-animations/" rel="alternate" type="text/html" title="Animacje svg" /><published>2021-10-05T00:00:00+02:00</published><updated>2021-10-05T00:00:00+02:00</updated><id>http://localhost:4000/blog/svg-animations</id><content type="html" xml:base="http://localhost:4000/blog/svg-animations/">&lt;p&gt;Dawno nie pisałam. Spowodowane jest to wieloma zmianami u mnie. Kilka współprac w trakcie - przez co brakuje czasu.&lt;br /&gt;
Jednakże, jestem bardzo zadowolona z ostatniego zlecenia, dlatego też postanowiłam napisać o nim, ku pamięci.&lt;/p&gt;

&lt;p&gt;Polegało ono między innymi na wykonaniu animacji svg. Nie jest to nic niezwykłego - obecnie bardzo często na stronach widujemy takie elementy. Pisałam już o nich w poście &lt;a href=&quot;../svg-i-css/&quot;&gt;“SVG i css”&lt;/a&gt;. Jednak w takiej formie - ja wykonywałam je po raz pierwszy :smile:&lt;/p&gt;

&lt;h1 id=&quot;animacje-svg&quot;&gt;Animacje svg&lt;/h1&gt;

&lt;p&gt;Animacja miała być na zdarzenie hover myszki i wyglądać między innymi w taki sposób:&lt;/p&gt;

&lt;figure class=&quot;center&quot;&gt;
    
    &lt;img src=&quot;/blog/images/blog_images/svg/svg-animation.gif&quot; alt=&quot;Image: Animacje svg&quot; /&gt; 
    &lt;figcaption&gt;&lt;span&gt;Animacje svg&lt;/span&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&quot;przygotowanie-pliku-vectorowego&quot;&gt;Przygotowanie pliku vectorowego&lt;/h2&gt;

&lt;p&gt;Pierwszą częścią takich animacji jest przygotowanie sobie pliku vectorowego. Do tego celu korzystam z &lt;strong&gt;inkscape&lt;/strong&gt; - podczas zapisywania wybieram opcję &lt;strong&gt;czysty svg&lt;/strong&gt;.
W wyniku otrzymuję taki plik xml:&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;svg&lt;/span&gt;
   &lt;span class=&quot;na&quot;&gt;xmlns:dc=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://purl.org/dc/elements/1.1/&quot;&lt;/span&gt;
   &lt;span class=&quot;na&quot;&gt;xmlns:cc=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://creativecommons.org/ns#&quot;&lt;/span&gt;
   &lt;span class=&quot;na&quot;&gt;xmlns:rdf=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;&lt;/span&gt;
   &lt;span class=&quot;na&quot;&gt;xmlns:svg=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2000/svg&quot;&lt;/span&gt;
   &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2000/svg&quot;&lt;/span&gt;
   &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;139.89301&quot;&lt;/span&gt;
   &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;118.598&quot;&lt;/span&gt;
   &lt;span class=&quot;na&quot;&gt;viewBox=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0 0 37.013357 31.379055&quot;&lt;/span&gt;
   &lt;span class=&quot;na&quot;&gt;version=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1.1&quot;&lt;/span&gt;
   &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;svg8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;defs&lt;/span&gt;
     &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;defs2&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;metadata&lt;/span&gt;
     &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;metadata5&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;rdf:RDF&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;cc:Work&lt;/span&gt;
         &lt;span class=&quot;na&quot;&gt;rdf:about=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;dc:format&amp;gt;&lt;/span&gt;image/svg+xml&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dc:format&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;dc:type&lt;/span&gt;
           &lt;span class=&quot;na&quot;&gt;rdf:resource=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://purl.org/dc/dcmitype/StillImage&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;dc:title&amp;gt;&amp;lt;/dc:title&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/cc:Work&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/rdf:RDF&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/metadata&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;path&lt;/span&gt;
     &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Rectangle_11&quot;&lt;/span&gt;
     &lt;span class=&quot;na&quot;&gt;d=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;M -9.9e-7,31.379054 V -6.3470066e-5 H 31.379117 V 31.379054 Z&quot;&lt;/span&gt;
     &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fill:#99dde2;stroke-width:0.84015954&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;path&lt;/span&gt;
     &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Rectangle_49&quot;&lt;/span&gt;
     &lt;span class=&quot;na&quot;&gt;d=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;M 25.39887,31.379054 V 19.764689 h 11.614365 v 11.614365 z&quot;&lt;/span&gt;
     &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fill:#bcedf0;stroke-width:0.84015954&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Usuwam co jest niepotrzebne, czyli&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;wszystkie id&lt;/li&gt;
  &lt;li&gt;dane meta&lt;/li&gt;
  &lt;li&gt;definicje&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I otrzymuję taki plik, już po wyczyszczeniu:&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;svg&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;139.89301&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;118.598&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;viewBox=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0 0 37.013357 31.379055&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;path&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;d=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;M -9.9e-7,31.379054 V -6.3470066e-5 H 31.379117 V 31.379054 Z&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fill:#99dde2;stroke-width:0.84015954&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;path&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;d=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;M 25.39887,31.379054 V 19.764689 h 11.614365 v 11.614365 z&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fill:#bcedf0;stroke-width:0.84015954&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Jest to grafika svg, zostawiam więc domyślne &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;width&lt;/code&gt; i &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;height&lt;/code&gt; oraz co jest najważniejsze &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;viewBox&lt;/code&gt;, który określa nam obszar naszego obrazu.&lt;/p&gt;

&lt;p class=&quot;info&quot;&gt;Zawierając plik &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;svg&lt;/code&gt; w kodzie mamy wpływ na wielkość wyświetlanego obrazu poprzez css - w końcu jest to grafika skalowalana - stąd &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;width&lt;/code&gt; i &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;height&lt;/code&gt; dla naszego obrazu ma jedynie zastosowanie do poprawnego i pełnego wyświetlenia svg - te wartości są relatywne do wszystkich znaczników zawartych w &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;svg&amp;gt;&amp;lt;/svg&amp;gt;&lt;/code&gt;. Jeśli zajdzie potrzeba, że obraz ma być większy, możemy targetować w niego css’em - mając pewność, że wszystkie elementy wewnątrz wyświetlą się poprawnie. Takie przynajmniej jest moje zdanie, wynikające z doświadczenia.&lt;/p&gt;

&lt;p&gt;Wracając do tematu. Wyrenderowany przez przeglądarkę obraz wygląda tak (nie zamieszczam znacznika &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;?xml&amp;gt;&lt;/code&gt;):&lt;/p&gt;
&lt;svg width=&quot;139.89301&quot; height=&quot;118.598&quot; viewBox=&quot;0 0 37.013357 31.379055&quot;&gt;
&lt;path d=&quot;M -9.9e-7,31.379054 V -6.3470066e-5 H 31.379117 V 31.379054 Z&quot; style=&quot;fill:#99dde2;stroke-width:0.84015954&quot; /&gt;
&lt;path d=&quot;M 25.39887,31.379054 V 19.764689 h 11.614365 v 11.614365 z&quot; style=&quot;fill:#bcedf0;stroke-width:0.84015954&quot; /&gt;
&lt;/svg&gt;

&lt;p&gt;Jeśli mamy zamieszczony plik svg bezpośrednio w kodzie naszej strony, możemy wpływać na niego poprzez naszego css - dzięki czemu dostępne mamy wszystkie triggery &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;css&lt;/code&gt; np. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:hover&lt;/code&gt; lub &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:active&lt;/code&gt;, mamy też możliwość określania kolorów i zachowania poszczególnych elementów obrazu - dzięki czemu możemy skorzystać z animacji css.&lt;/p&gt;

&lt;p&gt;Przykład trywialny - zmieńmy kolor naszego kwadratu (dużego) na inny podczas nakierowywania na niego myszką. Wystarczy dodać odpowiednie klasy do naszych znaczników &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;path/&amp;gt;&lt;/code&gt;, oraz ustawić &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;transitions&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-xml w50 highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;svg&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;square&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;139.89301&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;118.598&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;viewBox=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0 0 37.013357 31.379055&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;path&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bigSquare&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;d=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;M -9.9e-7,31.379054 V -6.3470066e-5 H 31.379117 V 31.379054 Z&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stroke-width:0.84015954&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;path&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;smallSquare&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;d=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;M 25.39887,31.379054 V 19.764689 h 11.614365 v 11.614365 z&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stroke-width:0.84015954&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-sass w50 highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nc&quot;&gt;.square&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;path&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;all&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;.2s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linear&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.bigSquare&lt;/span&gt;  
            &lt;span class=&quot;na&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;#99dde2&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.smallSquare&lt;/span&gt;  
            &lt;span class=&quot;na&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;#bcedf0&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:hover&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.bigSquare&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.smallSquare&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:pink&lt;/span&gt;

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Wynikiem powyższego - jak najedziemy kursorem na obraz - duży kwadrat zmieni swój kolor na czerwony, a mały na różowy.&lt;/p&gt;

&lt;style&gt;
  .square path {
    transition: background .2s linear;
  }

  .square path.bigSquare {
    fill: #99dde2;
  }

  .square path.smallSquare {
    fill: #bcedf0;
  }

  .square:hover path.bigSquare {
    fill: red;
  }
  .square:hover path.smallSquare {
    fill: pink;
  }
&lt;/style&gt;

&lt;div class=&quot;square&quot;&gt;
  &lt;svg width=&quot;139.89301&quot; height=&quot;118.598&quot; viewBox=&quot;0 0 37.013357 31.379055&quot;&gt;
    &lt;path class=&quot;bigSquare&quot; d=&quot;M -9.9e-7,31.379054 V -6.3470066e-5 H 31.379117 V 31.379054 Z&quot; style=&quot;stroke-width:0.84015954&quot; /&gt;
    &lt;path class=&quot;smallSquare&quot; d=&quot;M 25.39887,31.379054 V 19.764689 h 11.614365 v 11.614365 z&quot; style=&quot;stroke-width:0.84015954&quot; /&gt;
  &lt;/svg&gt;
&lt;/div&gt;

&lt;p&gt;W ten sposób możemy zrobić prawie każdą animację jaką oferuje nam css.&lt;/p&gt;

&lt;p&gt;Zatem odwzorujmy gifa z początku artykułu. Potrzebujemy do tego kilka obrazów svg. Ich kolory określę bezpośrednio w css - tak aby mieć jak największą elastyczność przy późniejszych, ewentualnych zmianach.&lt;/p&gt;

&lt;p&gt;Sama animacja polega na tym, że duży kwadrat obraca się wokół własnej osi o 90 stopni, natomiast mały kwadrat obracając się wokół własnej osi, zmienia swoją pozycję. Muszę przyznać, że jedynym elementem, jaki sprawił mi tutaj trudność było ustawienie css’a w taki sposób by zachować oś obrotu. Bez odpowiedniego ustawienia, obroty elementów wykonywane były w dość dziwny sposób. Krótkie wyszukiwanie w google i natrafiłam na dwa znaczniki &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;transform-origin&lt;/code&gt; i &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;transform-box&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;transform-origin&lt;/code&gt; &lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; - odpowia za punkt w jakim “przypięta” zostanie animacja. Zresztą, bardzo fajnie jest to zobrazowane w dokumentacji:&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe class=&quot;interactive&quot; height=&quot;390&quot; style=&quot;width:100%&quot; src=&quot;https://interactive-examples.mdn.mozilla.net/pages/css/transform-origin.html&quot; title=&quot;MDN Web Docs Interactive Example&quot; loading=&quot;lazy&quot;&gt;&lt;/iframe&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;transform-box&lt;/code&gt; zaś definiuje “kontener”, do którego będzie miała zastosowanie opcja &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;transform&lt;/code&gt; i &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;transofrm-origin&lt;/code&gt; - przyjmuje ona wartości &lt;strong&gt;content-box&lt;/strong&gt;, &lt;strong&gt;border-box&lt;/strong&gt;, &lt;strong&gt;fill-box&lt;/strong&gt;, &lt;strong&gt;stroke-box&lt;/strong&gt; i &lt;strong&gt;view-box&lt;/strong&gt;. Probowałam jedynie &lt;strong&gt;content-box&lt;/strong&gt; i &lt;strong&gt;fill-box&lt;/strong&gt;. Ta druga odnośi się, jak jej nazwa wskazuje do wypełnienia, w przypadku przykładu - do kwadratu.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Teoria ogarnięta, można przystąpić do pisania css’a. Ja preferuję &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssas'a&lt;/code&gt; z uwagi na jego przejżystość :smile:&lt;/p&gt;

&lt;div class=&quot;language-sass highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nc&quot;&gt;.animated-icon&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;relative&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;150px&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;150px&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.smaller&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;80px&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;80px&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;svg&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;overflow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;visible&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;absolute&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;all&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;.2s&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;auto&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;g&lt;/span&gt;
            &lt;span class=&quot;nl&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;all&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;.2s&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;transform-box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fill-box&lt;/span&gt;
            &lt;span class=&quot;nl&quot;&gt;transform-origin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;center&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;center&lt;/span&gt;

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To pierwsza część kodu.&lt;/p&gt;

&lt;p&gt;Jedyne co wymaga tutaj wyjaśnienia to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;overflow&lt;/code&gt;. Domyślnie svg ma ustawiony overflow na hidden, czyli wszystko co wystaje schowaj. Ponieważ w niektórych przypadkach, animacja może wychodzić “poza obszar” widzialny svg - warto ją ustawić właśnie na &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;visible&lt;/code&gt;, inaczej element może zostać ucięty w którymś momencie.&lt;/p&gt;

&lt;p&gt;Druga rzecz - to ustawienie svg na absoluta. Ponieważ rodzic naszej ikony &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.animated-icon&lt;/code&gt; jest &lt;strong&gt;relatywny&lt;/strong&gt; - &lt;strong&gt;absolut&lt;/strong&gt;, będzie relatywny do kontenera przetrzymywanego przez rodzica, czyli do wymiarów &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.animated-icon&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Kolejnie należy określić zachowanie naszych ikona na zdareznie &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:hover&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-sass highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nc&quot;&gt;.animated-icon&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:hover&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;.bigSquare&lt;/span&gt;
            &lt;span class=&quot;nl&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;translateX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;15%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;nl&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;rotate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;90deg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;.smallSquare&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;transform-box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fill-box&lt;/span&gt;
            &lt;span class=&quot;nl&quot;&gt;transform-origin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;center&lt;/span&gt;
            &lt;span class=&quot;nl&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;translateX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;-70%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;rotate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;720deg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Dodajemy kolor na każdą naszą ikonę&lt;/p&gt;

&lt;div class=&quot;language-sass highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nc&quot;&gt;.square&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;.bigSquare&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;#99dde2&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.blue&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.smallSquare&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;#26509b&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.green&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.smallSquare&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;#55b555&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.light-blue&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.smallSquare&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;#789ad9&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.yellow&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.smallSquare&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;#ffed83&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.orange&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.smallSquare&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;#f0783c&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.purple&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.smallSquare&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;#ab3070&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;i finalnie mamy taki oto kod:&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;animated-icon blue&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;svg&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;139.89301&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;118.598&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;viewBox=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0 0 37.013357 31.379055&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;path&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bigSquare&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;d=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;M -9.9e-7,31.379054 V -6.3470066e-5 H 31.379117 V 31.379054 Z&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stroke-width:0.84015954&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;path&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;smallSquare&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;d=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;M 25.39887,31.379054 V 19.764689 h 11.614365 v 11.614365 z&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stroke-width:0.84015954&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;animated-icon green&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;svg&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;139.89301&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;118.598&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;viewBox=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0 0 37.013357 31.379055&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;path&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bigSquare&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;d=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;M -9.9e-7,31.379054 V -6.3470066e-5 H 31.379117 V 31.379054 Z&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stroke-width:0.84015954&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;path&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;smallSquare&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;d=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;M 25.39887,31.379054 V 19.764689 h 11.614365 v 11.614365 z&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stroke-width:0.84015954&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;animated-icon light-blue&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;svg&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;139.89301&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;118.598&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;viewBox=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0 0 37.013357 31.379055&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;path&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bigSquare&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;d=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;M -9.9e-7,31.379054 V -6.3470066e-5 H 31.379117 V 31.379054 Z&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stroke-width:0.84015954&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;path&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;smallSquare&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;d=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;M 25.39887,31.379054 V 19.764689 h 11.614365 v 11.614365 z&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stroke-width:0.84015954&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;animated-icon yellow&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;svg&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;139.89301&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;118.598&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;viewBox=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0 0 37.013357 31.379055&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;path&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bigSquare&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;d=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;M -9.9e-7,31.379054 V -6.3470066e-5 H 31.379117 V 31.379054 Z&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stroke-width:0.84015954&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;path&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;smallSquare&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;d=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;M 25.39887,31.379054 V 19.764689 h 11.614365 v 11.614365 z&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stroke-width:0.84015954&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;animated-icon orange&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;svg&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;139.89301&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;118.598&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;viewBox=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0 0 37.013357 31.379055&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;path&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bigSquare&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;d=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;M -9.9e-7,31.379054 V -6.3470066e-5 H 31.379117 V 31.379054 Z&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stroke-width:0.84015954&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;path&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;smallSquare&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;d=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;M 25.39887,31.379054 V 19.764689 h 11.614365 v 11.614365 z&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stroke-width:0.84015954&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;animated-icon purple&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;svg&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;139.89301&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;118.598&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;viewBox=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0 0 37.013357 31.379055&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;path&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bigSquare&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;d=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;M -9.9e-7,31.379054 V -6.3470066e-5 H 31.379117 V 31.379054 Z&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stroke-width:0.84015954&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;path&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;smallSquare&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;d=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;M 25.39887,31.379054 V 19.764689 h 11.614365 v 11.614365 z&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stroke-width:0.84015954&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;style&gt;
.animated-icon {
	position: relative;
	width: 150px;
	height: 150px;
    margin: 15px;
}

.animated-icon.smaller {
	width: 80px;
	height: 80px;
}

.animated-icon svg {
	overflow: visible;
	position: absolute;
	transition: all .2s;
	width: 100%;
	height: 100%;
	left: 0;
	right: 0;
	margin: auto;
	top: 0;
}

.animated-icon svg path, .animated-icon svg g {
	transition: all .2s;
	transform-box: fill-box;
	transform-origin: center center;
}
.square  path.bigSquare,.square path.smallSquare {
  transition: all .2s linear
} 
.animated-icon:hover .bigSquare {
	transform: translateX(15%);
	transform: rotate(90deg);
}

.animated-icon:hover .smallSquare {
	transform-box: fill-box;
	transform-origin: center;
	transform: translateX(-280%) rotate(720deg);
}
.animated-icon .bigSquare {
	fill: #99dde2;
}

.blue .smallSquare {
	fill: #26509b;
}

.green .smallSquare {
	fill: #55b555;
}

.light-blue .smallSquare {
	fill: #789ad9;
}

.yellow .smallSquare {
	fill: #ffed83;
}

.orange .smallSquare {
	fill: #f0783c;
}

.purple .smallSquare {
	fill: #ab3070;
}
.animations {
    display: flex;
	justify-content: center;
	text-align: center;
}

&lt;/style&gt;

&lt;div class=&quot;animations&quot;&gt;
    &lt;div class=&quot;animated-icon blue&quot;&gt;
        &lt;svg width=&quot;139.89301&quot; height=&quot;118.598&quot; viewBox=&quot;0 0 37.013357 31.379055&quot;&gt;
            &lt;path class=&quot;bigSquare&quot; d=&quot;M -9.9e-7,31.379054 V -6.3470066e-5 H 31.379117 V 31.379054 Z&quot; style=&quot;stroke-width:0.84015954&quot; /&gt;
            &lt;path class=&quot;smallSquare&quot; d=&quot;M 25.39887,31.379054 V 19.764689 h 11.614365 v 11.614365 z&quot; style=&quot;stroke-width:0.84015954&quot; /&gt;
          &lt;/svg&gt;
        &lt;/div&gt;
        &lt;div class=&quot;animated-icon green&quot;&gt;
        &lt;svg width=&quot;139.89301&quot; height=&quot;118.598&quot; viewBox=&quot;0 0 37.013357 31.379055&quot;&gt;
            &lt;path class=&quot;bigSquare&quot; d=&quot;M -9.9e-7,31.379054 V -6.3470066e-5 H 31.379117 V 31.379054 Z&quot; style=&quot;stroke-width:0.84015954&quot; /&gt;
            &lt;path class=&quot;smallSquare&quot; d=&quot;M 25.39887,31.379054 V 19.764689 h 11.614365 v 11.614365 z&quot; style=&quot;stroke-width:0.84015954&quot; /&gt;
          &lt;/svg&gt;
        &lt;/div&gt;
        &lt;div class=&quot;animated-icon light-blue&quot;&gt;
        &lt;svg width=&quot;139.89301&quot; height=&quot;118.598&quot; viewBox=&quot;0 0 37.013357 31.379055&quot;&gt;
            &lt;path class=&quot;bigSquare&quot; d=&quot;M -9.9e-7,31.379054 V -6.3470066e-5 H 31.379117 V 31.379054 Z&quot; style=&quot;stroke-width:0.84015954&quot; /&gt;
            &lt;path class=&quot;smallSquare&quot; d=&quot;M 25.39887,31.379054 V 19.764689 h 11.614365 v 11.614365 z&quot; style=&quot;stroke-width:0.84015954&quot; /&gt;
          &lt;/svg&gt;
        &lt;/div&gt;
        &lt;div class=&quot;animated-icon yellow&quot;&gt;
        &lt;svg width=&quot;139.89301&quot; height=&quot;118.598&quot; viewBox=&quot;0 0 37.013357 31.379055&quot;&gt;
            &lt;path class=&quot;bigSquare&quot; d=&quot;M -9.9e-7,31.379054 V -6.3470066e-5 H 31.379117 V 31.379054 Z&quot; style=&quot;stroke-width:0.84015954&quot; /&gt;
            &lt;path class=&quot;smallSquare&quot; d=&quot;M 25.39887,31.379054 V 19.764689 h 11.614365 v 11.614365 z&quot; style=&quot;stroke-width:0.84015954&quot; /&gt;
          &lt;/svg&gt;
        &lt;/div&gt;
        &lt;div class=&quot;animated-icon orange&quot;&gt;
        &lt;svg width=&quot;139.89301&quot; height=&quot;118.598&quot; viewBox=&quot;0 0 37.013357 31.379055&quot;&gt;
            &lt;path class=&quot;bigSquare&quot; d=&quot;M -9.9e-7,31.379054 V -6.3470066e-5 H 31.379117 V 31.379054 Z&quot; style=&quot;stroke-width:0.84015954&quot; /&gt;
            &lt;path class=&quot;smallSquare&quot; d=&quot;M 25.39887,31.379054 V 19.764689 h 11.614365 v 11.614365 z&quot; style=&quot;stroke-width:0.84015954&quot; /&gt;
          &lt;/svg&gt;
        &lt;/div&gt;
        &lt;div class=&quot;animated-icon purple&quot;&gt;
        &lt;svg width=&quot;139.89301&quot; height=&quot;118.598&quot; viewBox=&quot;0 0 37.013357 31.379055&quot;&gt;
            &lt;path class=&quot;bigSquare&quot; d=&quot;M -9.9e-7,31.379054 V -6.3470066e-5 H 31.379117 V 31.379054 Z&quot; style=&quot;stroke-width:0.84015954&quot; /&gt;
            &lt;path class=&quot;smallSquare&quot; d=&quot;M 25.39887,31.379054 V 19.764689 h 11.614365 v 11.614365 z&quot; style=&quot;stroke-width:0.84015954&quot; /&gt;
          &lt;/svg&gt;
        &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Całkiem fajne - prawda :smile:&lt;/p&gt;

&lt;p&gt;Poniżej jeszcze kilka przykładów wraz z kodem. Tym razem będą animowane trójkąty.&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- trójkąty --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;svg&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;version=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1.1&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;viewBox=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0 0 37.013357 31.379055&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;118.598&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;139.89301&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;path&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;d=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;M 17.639845,0.89933856 0,31.379054 h 35.219678 z&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fill:#f0d63c;fill-opacity:1;stroke:none;stroke-width:0.6168707px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;path&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;d=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;M 22.391046,9.1342653 9.0599184,31.379054 H 35.219678 Z&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fill:#f03c3c;fill-opacity:1;stroke:none;stroke-width:0.6168707px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;path&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;d=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;m 26.450358,16.166349 -8.829075,15.212705 17.598395,-0.0054 z&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.6168707px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;path&lt;/span&gt; 
        &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hide fly-in-right&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;d=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;m 24.745189,11.8482 -11.378048,19.520644 23.461887,0.01021 z&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fill:#789ad9;fill-opacity:1;stroke:none;stroke-width:0.81052744px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;animowane-flagi&quot;&gt;Animowane flagi&lt;/h2&gt;

&lt;style&gt;
 .animations{
     flex-wrap:wrap
 }

    /** end helpers **/
    .animated-icon .triangle-big {
        -webkit-transform-origin: bottom center;
        transform-origin: bottom center;
        z-index: 0;
        transform-box: fill-box;
    }

    .animated-icon:hover .triangle-big {
        -webkit-transform: scale(1.15);
        transform: scale(1.15);
    }

    .animated-icon:hover svg .triangle-small {
        transform-box: fill-box;
        -webkit-transform-origin: center;
        transform-origin: center;
    }

    .animated-icon:hover svg.triangle-small {
        -webkit-transform: translateX(-70%);
        transform: translateX(-70%);
    }

    .animated-icon:hover svg.triangle-small path {
        -webkit-transform: rotate(720deg);
        transform: rotate(720deg);
    }

    svg .hide {
        opacity: 0;
    }

    svg .fly-in-top {
        transform-box: border-box;
        -webkit-transform: rotate(50deg) translate(10%, -120%);
        transform: rotate(50deg) translate(10%, -120%);
        -webkit-transform-origin: right center;
        transform-origin: right center;
    }

    svg .fly-in-right {
        -webkit-transform: translateX(120%);
        transform: translateX(120%);
        -webkit-transform-origin: right center;
        transform-origin: right center;
    }

    svg .fly-in-left {
        -webkit-transform: translateX(-120%);
        transform: translateX(-120%);
        -webkit-transform-origin: left center;
        transform-origin: left center;
    }

    svg .fade-in-up {
        -webkit-transform: translateY(-50%);
        transform: translateY(-50%);
    }

    svg .from-center {
        -webkit-transform-origin: bottom center;
        transform-origin: bottom center;
        -webkit-transform: scale(0.6) translateY(35%);
        transform: scale(0.6) translateY(35%);
    }

    svg .rotate {
        -webkit-transform: translate(8%, 0);
        transform: translate(8%, 0);
    }

    svg:hover .hide {
        opacity: 1;
    }

    svg:hover .fly-in-top {
        -webkit-transform: rotate(0deg) translateX(0);
        transform: rotate(0deg) translateX(0);
    }

    svg:hover .fly-in-right {
        -webkit-transform: translateX(0);
        transform: translateX(0);
        transition-timing-function: cubic-bezier(0.18, 0.89, 0.32, 1.28);
    }

    svg:hover .fade-in-up {
        -webkit-transform: translateY(0);
        transform: translateY(0);
    }

    svg:hover .move-x {
        -webkit-transform: translateX(-10%);
        transform: translateX(-10%);
    }

    svg:hover .fly-in-left {
        -webkit-transform: translateX(0);
        transform: translateX(0);
    }

    svg:hover .from-center {
        -webkit-transform: scale(1) translateY(0%);
        transform: scale(1) translateY(0%);
    }

    svg:hover .rotate {
        -webkit-transform: rotate(120deg) translate(10%, -32%);
        transform: rotate(120deg) translate(10%, -32%);
    }
&lt;/style&gt;

&lt;div class=&quot;animations&quot;&gt;
    &lt;div class=&quot;box&quot;&gt;
        &lt;div class=&quot;animated-icon&quot;&gt;
            &lt;svg version=&quot;1.1&quot; viewBox=&quot;0 0 37.013357 31.379055&quot; height=&quot;118.598&quot; width=&quot;139.89301&quot;&gt;
                &lt;path d=&quot;M 16.976838,2.0357324 -0.00533822,31.379054 H 33.901231 Z&quot; style=&quot;fill:#26509b;fill-opacity:1;stroke:none;stroke-width:0.59387147px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1&quot; /&gt;
                &lt;path d=&quot;m 23.681729,14.142918 -9.718941,16.972742 19.498356,0.0027 z&quot; style=&quot;fill:#fcffff;fill-opacity:1;stroke:#ebedf2;stroke-width:0.52023143;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1&quot; /&gt;
                &lt;path d=&quot;m 25.779004,17.104646 -8.149621,14.274408 17.240551,-0.0039 z&quot; style=&quot;fill:#d04343;fill-opacity:1;stroke:none;stroke-width:0.59387147px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1&quot; /&gt;
                &lt;path class=&quot;hide fly-in-top&quot; d=&quot;m 24.745189,11.8482 -11.378048,19.520644 23.461887,0.01021 z&quot; style=&quot;fill:#789ad9;fill-opacity:1;stroke:none;stroke-width:0.81052744px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1&quot; /&gt;
            &lt;/svg&gt;
            
        &lt;/div&gt;
        fly-in-top
    &lt;/div&gt;
    &lt;div class=&quot;box&quot;&gt;
        &lt;div class=&quot;animated-icon&quot;&gt;
            &lt;svg version=&quot;1.1&quot; viewBox=&quot;0 0 37.013357 31.379055&quot; height=&quot;118.598&quot; width=&quot;139.89301&quot;&gt;
                &lt;path d=&quot;M 17.639845,0.89933856 0,31.379054 h 35.219678 z&quot; style=&quot;fill:#f0d63c;fill-opacity:1;stroke:none;stroke-width:0.6168707px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1&quot; /&gt;
                &lt;path d=&quot;M 22.391046,9.1342653 9.0599184,31.379054 H 35.219678 Z&quot; style=&quot;fill:#f03c3c;fill-opacity:1;stroke:none;stroke-width:0.6168707px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1&quot; /&gt;
                &lt;path d=&quot;m 26.450358,16.166349 -8.829075,15.212705 17.598395,-0.0054 z&quot; style=&quot;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.6168707px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1&quot; /&gt;
                &lt;path class=&quot;hide fly-in-right&quot; d=&quot;m 24.745189,11.8482 -11.378048,19.520644 23.461887,0.01021 z&quot; style=&quot;fill:#789ad9;fill-opacity:1;stroke:none;stroke-width:0.81052744px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1&quot; /&gt;
            &lt;/svg&gt;
           
        &lt;/div&gt;
        fly-in-right
    &lt;/div&gt;
    &lt;div class=&quot;box&quot;&gt;
        &lt;div class=&quot;animated-icon&quot;&gt;
            &lt;svg version=&quot;1.1&quot; viewBox=&quot;0 0 41.463385 26.379055&quot; height=&quot;118.598&quot; width=&quot;156.71201&quot;&gt;
                &lt;path d=&quot;M 18.174487,0.19540461 0,31.598923 h 36.287142 z&quot; style=&quot;fill:#f03c3c;fill-opacity:1;stroke:none;stroke-width:0.63556725px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1&quot; /&gt;
                &lt;path d=&quot;M 23.069688,8.6799213 9.3345147,31.598923 H 36.287142 Z&quot; style=&quot;fill:#5a7cbc;fill-opacity:1;stroke:none;stroke-width:0.63556725px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1&quot; /&gt;
                &lt;path d=&quot;m 27.252034,15.925139 -9.096671,15.673784 18.131779,-0.0055 z&quot; style=&quot;fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:0.63556725px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1&quot; /&gt;
                &lt;path class=&quot;hide fade-in-up&quot; style=&quot;fill:#789ad9;stroke-width:0.84601939&quot; d=&quot;M 18.098893,8.5283978e-4 36.197787,31.598832 H 0 Z&quot; data-name=&quot;Path 298&quot; /&gt;
                &lt;path class=&quot;hide fade-in-up&quot; style=&quot;fill:#5a7cbc;stroke-width:0.84601939&quot; d=&quot;M 27.82404,7.9879485 41.478207,31.600403 14.136161,31.598924 Z&quot; /&gt;
            &lt;/svg&gt;
        &lt;/div&gt;
        fly-in-up
    &lt;/div&gt;
    &lt;div class=&quot;box&quot;&gt;
        &lt;div class=&quot;animated-icon&quot;&gt;
            &lt;svg width=&quot;156.71201&quot; height=&quot;119.429&quot; viewBox=&quot;0 0 41.463385 26.379055&quot; version=&quot;1.1&quot;&gt;
                &lt;g class=&quot;move-x&quot; transform=&quot;translate(-0.18981651,-0.37302536)&quot;&gt;
                    &lt;path style=&quot;fill:#26509b;fill-opacity:1;stroke:none;stroke-width:0.63708025px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1&quot; d=&quot;M 18.34603,0.38698028 0.18981651,31.971949 36.595194,31.968283 Z&quot; /&gt;
                    &lt;path style=&quot;fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:0.64660412px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1&quot; d=&quot;M 23.660122,8.6549507 9.6864278,31.971949 l 27.5888442,0.0015 z&quot; /&gt;
                    &lt;path style=&quot;fill:#f03c3c;fill-opacity:1;stroke:none;stroke-width:0.64660412px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1&quot; d=&quot;m 27.915094,16.031544 -9.295046,15.932099 18.655224,0.0098 z&quot; /&gt;
                &lt;/g&gt;
                &lt;path class=&quot;hide fly-in-left&quot; d=&quot;M 27.82404,7.999 42.487083,31.9999 14.156161,31.99999 Z&quot; style=&quot;fill:#5a7cbc;fill-opacity:1;stroke-width:1.16865492&quot; /&gt;
            &lt;/svg&gt;
        &lt;/div&gt;
        fly-in-left, move-x
    &lt;/div&gt;
    &lt;div class=&quot;box&quot;&gt;
        &lt;div class=&quot;animated-icon&quot;&gt;
            &lt;svg width=&quot;156.71201&quot; height=&quot;119.429&quot; viewBox=&quot;0 0 41.463385 26.379055&quot; version=&quot;1.1&quot;&gt;
                &lt;g transform=&quot;translate(-0.45361297)&quot; id=&quot;g841&quot;&gt;
                    &lt;path style=&quot;fill:#f03c3c;fill-opacity:1;stroke:none;stroke-width:0.63968289px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1&quot; d=&quot;M 18.745783,-0.00851234 0.45361297,31.598363 H 36.975744 Z&quot; /&gt;
                    &lt;path style=&quot;fill:#f0d53c;fill-opacity:1;stroke:none;stroke-width:0.63968289px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1&quot; d=&quot;M 23.672692,8.5309476 9.8485761,31.598363 H 36.975744 Z&quot; /&gt;
                    &lt;path style=&quot;fill:#f03c3c;fill-opacity:1;stroke:none;stroke-width:0.43304083px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1&quot; d=&quot;m 30.819711,20.9246 -6.19798,10.679264 12.354013,-0.0038 z&quot; /&gt;
                &lt;/g&gt;
                &lt;path class=&quot;from-center hide&quot; data-name=&quot;Path 298&quot; d=&quot;M 18.29217,-0.00851234 36.522131,31.598363 0,31.598832 Z&quot; style=&quot;fill:#789ad9;stroke-width:0.84728688&quot; /&gt;
                &lt;path class=&quot;from-center hide&quot; d=&quot;M 31.58952,14.746975 41.463414,31.59968 H 21.714782 Z&quot; style=&quot;fill:#97b8f4;stroke-width:0.84601939&quot; /&gt;
            &lt;/svg&gt;
        &lt;/div&gt;
        from-center
    &lt;/div&gt;
    &lt;div class=&quot;box&quot;&gt;
        &lt;div class=&quot;animated-icon&quot;&gt;
            &lt;svg width=&quot;139.89301&quot; height=&quot;118.598&quot; viewBox=&quot;0 0 41.463385 26.379055&quot; version=&quot;1.1&quot;&gt;
                &lt;g class=&quot;rotate&quot;&gt;
                    &lt;path id=&quot;path1738-20&quot; d=&quot;M 18.274521,0.68414302 0.68810651,31.071553 H 35.801129 Z&quot; style=&quot;opacity:1;fill:#ffffff;fill-opacity:1;stroke:#ebebeb;stroke-width:0.61500245px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1&quot; /&gt;
                    &lt;path d=&quot;M 25.326297,12.202996 14.17771,31.412295 36.399458,31.405595 Z&quot; style=&quot;fill:#ffed83;fill-opacity:1;stroke:none;stroke-width:0.77893138px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1&quot; /&gt;
                &lt;/g&gt;
            &lt;/svg&gt;
        &lt;/div&gt;
        rotate
    &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Podam jedynie kod sass odpowiedzialny za animację poszczególnych elementów:&lt;/p&gt;
&lt;div class=&quot;language-sass highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;svg&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;.hide&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;

    &lt;span class=&quot;nc&quot;&gt;.fly-in-top&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;transform-box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;border-box&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;rotate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;50deg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;translate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10%&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;-120%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;transform-origin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;right&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;center&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;.fly-in-right&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;translateX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;120%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;transform-origin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;right&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;center&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;.fly-in-left&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;translateX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;-120%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;transform-origin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;center&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;.fade-in-up&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;translateY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;-50%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;.from-center&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;transform-origin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bottom&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;center&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;.6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;translateY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;35%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;.rotate&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;translate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;8%&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:hover&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;.hide&lt;/span&gt;
            &lt;span class=&quot;nl&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;.fly-in-top&lt;/span&gt;
            &lt;span class=&quot;nl&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;rotate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0deg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;translateX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;.fly-in-right&lt;/span&gt;
            &lt;span class=&quot;nl&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;translateX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;nl&quot;&gt;transition-timing-function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;cubic-bezier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;.18&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,.&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;89&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,.&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;.28&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;.fade-in-up&lt;/span&gt;
            &lt;span class=&quot;nl&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;translateY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;.move-x&lt;/span&gt;
            &lt;span class=&quot;nl&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;translateX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;-10%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;.fly-in-left&lt;/span&gt;
            &lt;span class=&quot;nl&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;translateX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;.from-center&lt;/span&gt;
            &lt;span class=&quot;nl&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;translateY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;.rotate&lt;/span&gt;
            &lt;span class=&quot;nl&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;rotate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;120deg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;translate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10%&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;-32%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Połączenie css’a i svg do animacji daje parawdę dużo możliwości. Ciekawy efekt opisałam jakiś czas temu w poście &lt;a href=&quot;../svg-i-css/&quot;&gt;“SVG i css”&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;transform-origin&lt;/code&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin&quot; target=&quot;_blank&quot;&gt;Dokumenatcja MDN Web Docs &lt;/a&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Edyta Jozdowska</name></author><category term="[&quot;frontend&quot;, &quot;inne&quot;]" /><category term="frontend" /><category term="sass" /><category term="animations" /><summary type="html">Dawno nie pisałam. Spowodowane jest to wieloma zmianami u mnie. Kilka współprac w trakcie - przez co brakuje czasu. Jednakże, jestem bardzo zadowolona z ostatniego zlecenia, dlatego też postanowiłam napisać o nim, ku pamięci.</summary></entry><entry><title type="html">Sudoku Validator</title><link href="http://localhost:4000/blog/sudoku-validator/" rel="alternate" type="text/html" title="Sudoku Validator" /><published>2020-07-28T00:00:00+02:00</published><updated>2020-07-28T00:00:00+02:00</updated><id>http://localhost:4000/blog/sudoku-validator</id><content type="html" xml:base="http://localhost:4000/blog/sudoku-validator/">&lt;hr /&gt;
&lt;p&gt;layout: post
title: Walidacja sudoku
date: 2020-07-28
category: [programowanie, php, python, “bitwy programowania”]
author: Edyta Jozdowska
tags: [php, python ]
excerpt: 
published: true
—&lt;/p&gt;
&lt;h1 id=&quot;sudoku---na-czym-polega&quot;&gt;Sudoku - na czym polega&lt;/h1&gt;
&lt;p&gt;Sudoku według &lt;a href=&quot;https://pl.wikipedia.org/wiki/Sudoku&quot; target=&quot;_blank&quot;&gt;Wikipedii&lt;/a&gt; jest łamigłóką, w której zadaniem jest wypełnienie diagramu 9 × 9 w taki sposób, aby w każdym wierszu, w każdej kolumnie i w każdym z dziewięciu pogrubionych kwadratów 3 × 3 znalazło się po jednej cyfrze od 1 do 9.&lt;/p&gt;

&lt;p&gt;Wbrew pozorom nie jest to takie łatwe - sama gra nie pociąga mnie zbytnio, ale zadanie jakie ostatnio wykonywałam właśnie na sudoku - już tak :smile:.
Zadaniem było sprawdzenie czy podany ciąg liczb - spełnia reguły gry - czyli w wierszu i kolumnie są cyfry od 1…9 oraz czy w subgridzie 3 x 3 są cyfry  od 1…9.&lt;/p&gt;</content><author><name>Jozdowska Edyta</name></author><summary type="html">layout: post title: Walidacja sudoku date: 2020-07-28 category: [programowanie, php, python, “bitwy programowania”] author: Edyta Jozdowska tags: [php, python ] excerpt: published: true — Sudoku - na czym polega Sudoku według Wikipedii jest łamigłóką, w której zadaniem jest wypełnienie diagramu 9 × 9 w taki sposób, aby w każdym wierszu, w każdej kolumnie i w każdym z dziewięciu pogrubionych kwadratów 3 × 3 znalazło się po jednej cyfrze od 1 do 9.</summary></entry><entry><title type="html">Zsumuj indeksy liter w alfabecie</title><link href="http://localhost:4000/blog/sum-letter-index-in-word/" rel="alternate" type="text/html" title="Zsumuj indeksy liter w alfabecie" /><published>2020-06-24T00:00:00+02:00</published><updated>2020-06-24T00:00:00+02:00</updated><id>http://localhost:4000/blog/sum-letter-index-in-word</id><content type="html" xml:base="http://localhost:4000/blog/sum-letter-index-in-word/">&lt;p&gt;Szybkie zadanie, szybki kod.&lt;/p&gt;
&lt;h1 id=&quot;zsumuj-indeksy-liter-w-alfabecie-w-zadanym-słowie&quot;&gt;Zsumuj indeksy liter w alfabecie w zadanym słowie&lt;/h1&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;TEST 1: Math -&amp;gt; 42
TEST 2: math -&amp;gt; 42
TEST 3: Thma -&amp;gt; 42
TEST 4: life -&amp;gt; 32
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nx&quot;&gt;words&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;math&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Thma&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;life&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;words&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toLowerCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;``&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;charCodeAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;96&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;OUTPUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;words&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Math'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'math'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Thma'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'life'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;words&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;96&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
    
&lt;span class=&quot;c1&quot;&gt;# OUTPUT: 
&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Edyta Jozdowska</name></author><category term="[&quot;programowanie&quot;, &quot;js&quot;, &quot;py&quot;]" /><category term="js" /><category term="py" /><summary type="html">Szybkie zadanie, szybki kod. Zsumuj indeksy liter w alfabecie w zadanym słowie</summary></entry><entry><title type="html">Floating-point problem</title><link href="http://localhost:4000/blog/floating-point-problem/" rel="alternate" type="text/html" title="Floating-point problem" /><published>2020-02-22T10:21:00+01:00</published><updated>2020-02-22T10:21:00+01:00</updated><id>http://localhost:4000/blog/floating-point-problem</id><content type="html" xml:base="http://localhost:4000/blog/floating-point-problem/">&lt;ul class=&quot;content_list&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#du%c5%bce-liczby-w-js--php&quot;&gt;Duże liczby w JS / PHP&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#dlaczego-tak-si%c4%99-dzieje&quot;&gt;Dlaczego tak się dzieje?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#floating-point-precision&quot;&gt;Floating-point precision&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ten post został zainspirowany błędem na jaki natknęłam się rozwiązując zadanie odnośnie &lt;a href=&quot;../happy-numbers/&quot;&gt;“HappyNumbers”&lt;/a&gt;. Zachęcam do przeczytania bo są to naprawdę fajne liczby i zasługują na swoje miano wesołych :wink:.&lt;/p&gt;

&lt;p&gt;Rozwiązując wyżej wspomniane  zadanie w &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;js&lt;/code&gt; i w &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;php&lt;/code&gt; natknęłam się na błąd, który uniemożliwiał mi przejście wszystkich testów  sprawdzających poprawność kodu.&lt;br /&gt;
Otóż liczby, które powinny być wesołe były niewesołe. Byłam pewna, że kod jest poprawny, działał w &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pythonie&lt;/code&gt;, skąd więc rozbieżność?&lt;/p&gt;

&lt;h2 id=&quot;duże-liczby-w-js--php&quot;&gt;Duże liczby w JS / PHP&lt;/h2&gt;
&lt;p&gt;Spróbujmy wyświelić liczbę &lt;strong&gt;16525534153749833&lt;/strong&gt; w &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;js&lt;/code&gt; jako liczbę. Rezultatem będzie: &lt;strong&gt;16525534153749832&lt;/strong&gt; :thinking:. Jakim cudem?&lt;br /&gt;
To samo się dzieje dla liczby: &lt;strong&gt;2712939616709395196 ≠ 2712939616709395000&lt;/strong&gt; oraz dla liczby&lt;br /&gt;
 &lt;strong&gt;9244681613480703 ≠ 9244681613480704&lt;/strong&gt;. &lt;strong&gt;9999999999999999&lt;/strong&gt; ≠ &lt;strong&gt;10000000000000000&lt;/strong&gt;&lt;br /&gt;
 Wyświetlane jest zupełnie inna liczba niż podawana.&lt;/p&gt;

&lt;blockquote class=&quot;summary&quot;&gt;
  &lt;p&gt;Wniosek: &lt;strong&gt;Istnieją liczby, które podawane typem jako liczby nie są możliwe do wyświetlenia / użycia&lt;/strong&gt; np. w przeglądarce.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Stąd do mojego algorytmu trafiały nie te liczby. Zapisując powyższe jako stringi, nie ma problemu. Poniżej pen z przykładami:&lt;/p&gt;

&lt;iframe height=&quot;380&quot; style=&quot;width: 100%;&quot; scrolling=&quot;no&quot; title=&quot;yLNVpzL&quot; src=&quot;https://codepen.io/ejo/embed/yLNVpzL?height=265&amp;amp;theme-id=default&amp;amp;default-tab=js,result&quot; frameborder=&quot;no&quot; allowtransparency=&quot;true&quot; allowfullscreen=&quot;true&quot;&gt;
  See the Pen &lt;a href=&quot;https://codepen.io/ejo/pen/yLNVpzL&quot;&gt;yLNVpzL&lt;/a&gt; by ejo
  (&lt;a href=&quot;https://codepen.io/ejo&quot;&gt;@ejo&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.
&lt;/iframe&gt;
&lt;p&gt;Zobaczmy &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;php&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nb&quot;&gt;var_dump&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;679927533571841532898&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// float(6.7992753357184E+20)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;dlaczego-tak-się-dzieje&quot;&gt;Dlaczego tak się dzieje?&lt;/h2&gt;

&lt;p&gt;Zobaczmy dokumentację:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;In JavaScript, Number is a numeric data type in the double-precision 64-bit floating point format (IEEE 754). In other programming languages different numeric types can exist, for examples: Integers, Floats, Doubles, or Bignums &lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Przekładając na polski. Liczby w &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;js&lt;/code&gt; nie rozróżniają typów liczb np. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;short&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;long&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;floating-point&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;integer&lt;/code&gt; itp., jak większość języków programowania. &lt;strong&gt;PODAWANE SĄ ZAWSZE&lt;/strong&gt; jako 64-bitowy &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;floating-point&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Oznacza to, że niektórych liczb całkowitych nie jesteśmy w stanie przedstawić w typie liczby bez utraty ich precyzji, stąd &lt;strong&gt;9999999999999999&lt;/strong&gt; ≠ &lt;strong&gt;10000000000000000&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;W &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;php&lt;/code&gt; natomiast według dokumentacji:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;If PHP encounters a number beyond the bounds of the integer type, it will be interpreted as a float instead. &lt;sup id=&quot;fnref:2&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Co oznacza, że jeśli &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;php&lt;/code&gt; napotka liczbę, która przekracza granicę liczby całkowitej w jakiej może być zapisana, zostanie ona zinterpretowana jako liczba zmiennoprzecinkowa. Tak właśnie się stało dla liczby &lt;strong&gt;679927533571841532898&lt;/strong&gt; lub &lt;strong&gt;1646476620141690717724578&lt;/strong&gt;. Liczby te są po prostu za duże.&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nb&quot;&gt;var_dump&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1646476620141690717724578&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//float(6.7992753357184E+20)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;floating-point-precision&quot;&gt;Floating-point precision&lt;/h2&gt;
&lt;p&gt;Temat precyzyjności &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;floating-point&lt;/code&gt; bardziej jest znany do wykonywania obliczeń z liczbami po przecinku np:  0.1 + 0.2&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.30000000000000004&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Czy to w &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;py&lt;/code&gt;, czy w &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;js&lt;/code&gt; czy &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;php&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Baaaardzo dokładnie jest na ten temat napisane &lt;a href=&quot;https://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html&quot; target=&quot;_blank&quot;&gt;What every computer Scientist should know about floating-point arithmetic.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ta nieprecyzyjność jest mi znana. Jednak nie odniosłabym jej nigdy do problemu reprezentacji liczby całkowitej :smile:.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Number&quot; target=&quot;_blank&quot;&gt;Dokumentacja JS - Numbers&lt;/a&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.php.net/manual/en/language.types.integer.php&quot; target=&quot;_blank&quot;&gt;Dokumentacja php - Integers&lt;/a&gt; &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Edyta Jozdowska</name></author><category term="[&quot;programowanie&quot;]" /><category term="js" /><category term="php" /><summary type="html">Problem precyzyjności liczb zapisanych jako floating-point.</summary></entry><entry><title type="html">Happy numbers</title><link href="http://localhost:4000/blog/happy-numbers/" rel="alternate" type="text/html" title="Happy numbers" /><published>2020-02-22T05:50:00+01:00</published><updated>2020-02-22T05:50:00+01:00</updated><id>http://localhost:4000/blog/happy-numbers</id><content type="html" xml:base="http://localhost:4000/blog/happy-numbers/">&lt;ul class=&quot;content_list&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#weso%c5%82e-liczby-czyli-kt%c3%b3re&quot;&gt;Wesołe liczby, czyli które?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#python---happynumbers&quot;&gt;Python - happyNumbers&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#php---happynumbers&quot;&gt;PHP - happyNumbers&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#javascript---happynumbers&quot;&gt;Javascript - happyNumbers&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#b%c5%82%c4%85d-du%c5%bcych-liczb-nie-tylko&quot;&gt;Błąd dużych liczb? Nie tylko&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Jakiś czas temu wspominałam, że biorę udział w &lt;a href=&quot;../kategoria/bitwy%20programowania/&quot;&gt;“bitwach programowania”&lt;/a&gt; na portalu &lt;a href=&quot;https://www.codingame.com/&quot; target=&quot;_blank&quot;&gt;CodingGames&lt;/a&gt;. Na tym samym portalu, prócz bitew, można rozwiązywać ciekawe zadania programistyczne.&lt;/p&gt;

&lt;p&gt;W ramach jednego z zadań trzeba było napisać algorytm który obliczy &lt;strong&gt;“liczby wesołe”&lt;/strong&gt;.&lt;br /&gt;
Wczoraj miałam z nimi właśnie “randkę” :wink:&lt;/p&gt;
&lt;h2 id=&quot;wesołe-liczby-czyli-które&quot;&gt;Wesołe liczby, czyli które?&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Liczbą wesołą&lt;/strong&gt;&lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; jest taka liczba, której suma potęg poszczególnych cyfr, aż do kwadratu jednej cyfry wynosi 1.&lt;br /&gt;
Przykład:&lt;/p&gt;
&lt;div class=&quot;language-config highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;m&quot;&gt;23&lt;/span&gt; 

&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;*&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; + &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;*&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt; = &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt; + &lt;span class=&quot;m&quot;&gt;9&lt;/span&gt; = &lt;span class=&quot;m&quot;&gt;13&lt;/span&gt; -&amp;gt;
&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;*&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; + &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;*&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt; = &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; + &lt;span class=&quot;m&quot;&gt;9&lt;/span&gt; = &lt;span class=&quot;m&quot;&gt;10&lt;/span&gt; -&amp;gt; 
&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;*&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; + &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;*&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; = &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;*&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; = &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;

&lt;span class=&quot;m&quot;&gt;23&lt;/span&gt; -&amp;gt; &lt;span class=&quot;n&quot;&gt;liczba&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weso&lt;/span&gt;ł&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;, &lt;span class=&quot;n&quot;&gt;cho&lt;/span&gt;ć &lt;span class=&quot;n&quot;&gt;ja&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wol&lt;/span&gt;ę &lt;span class=&quot;n&quot;&gt;nazywa&lt;/span&gt;ć &lt;span class=&quot;n&quot;&gt;je&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;szcz&lt;/span&gt;ęś&lt;span class=&quot;n&quot;&gt;liwymi&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Rozłóżmy algorytm obliczania liczb wesołych na czynniki pierwsze.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-graph&quot;&gt;graph TD
A((n))--&amp;gt;C[Zsumuj kwadraty wszystkich cyfr&amp;lt;br/&amp;gt;składające się na liczbę n]
G.-&amp;gt;|nie|C
C--&amp;gt;G{suma jest cyfrą&amp;lt;br/&amp;gt;i jej kwadrat jest cyfrą&amp;lt;br/&amp;gt;?}
G.-&amp;gt;|tak|D{cyfra == 1&amp;lt;br/&amp;gt;?}
D.-&amp;gt;|tak|E(Liczba jest wesoła)
D.-&amp;gt;|nie|F(Liczba nie jest wesoła)
classDef decision fill:#fbfbd4,stroke:#444,stroke-width:1px
classDef inp fill:#f7f7f7,stroke:#444,stroke-width:1px
class A,B,E,F,H inp;
class G decision;
classDef wynik fill:#d2e5fb,stroke:#96c5fb
class H wynik;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Algorytm postępowania jest dość prosty. Co ciekawe, powyższe działania matematyczne na liczbach niewesołych doprowadzą nas do wyniku 4. Jeśli nie wierzysz, wypróbuj.&lt;br /&gt;
Suma kwadratów liczb niewesołych doprowadzając je do kwadratu 1 cyfry będzie równa &lt;strong&gt;4&lt;/strong&gt;. Ponieważ cyfra 4 jest liczbą niewesołą, możemy opuścić w tym momencie nasze obliczenia z wnioskiem, że liczba jest niewesoła.
Należałoby to uwzględnić w naszym algorytmie.&lt;/p&gt;

&lt;div class=&quot;happyNumber&quot;&gt;
    &lt;div class=&quot;form&quot;&gt;
        &lt;h3 style=&quot;padding-top:0&quot;&gt;Wesołe liczby - live&lt;/h3&gt;
        &lt;p&gt;Sprawdź czy liczba jest wesoła:&lt;/p&gt;
        &lt;input type=&quot;number&quot; id=&quot;n&quot; class=&quot;input&quot; value=&quot;12587789&quot; placeholder=&quot;Wpisz liczbę&quot; /&gt;
        &lt;button id=&quot;button&quot; class=&quot;button&quot;&gt;Oblicz&lt;/button&gt;
    &lt;/div&gt;
    &lt;div id=&quot;result&quot;&gt;&lt;small&gt;Wynik obliczeń&lt;/small&gt;&lt;/div&gt;
    &lt;div style=&quot;margin-left:15px;padding:15px;background:#f6f6f6;width:100%&quot;&gt;
        &lt;small&gt;Spróbuj liczb np: &lt;a class=&quot;try&quot;&gt;1121&lt;/a&gt;, &lt;a class=&quot;try&quot;&gt;496788&lt;/a&gt;, &lt;a class=&quot;try&quot;&gt;655289706&lt;/a&gt;, &lt;a class=&quot;try&quot;&gt;207830543655&lt;/a&gt; - to są liczby wesołe&lt;/small&gt;&lt;br /&gt;
        &lt;small&gt;Liczby niewesołe to np: &lt;a class=&quot;try&quot;&gt;6&lt;/a&gt;, &lt;a class=&quot;try&quot;&gt;60&lt;/a&gt;, &lt;a class=&quot;try&quot;&gt;45989&lt;/a&gt;, &lt;a class=&quot;try&quot;&gt;3164543188&lt;/a&gt;, &lt;a class=&quot;try&quot;&gt;62716820370707&lt;/a&gt;&lt;/small&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;script type=&quot;text/javascript&quot;&gt;
    let result = document.getElementById('result');
    let input = document.getElementById('n');
    const imHappy = (n) =&gt; {
        arr = [];
        while (n) {
            subarr = [];
            if (n == 1) return [true, arr];
            n = (n + '').split ``.reduce((a, b) =&gt; {
                subarr.push(`${b}*${b}`);
                return a + (b * b)
            }, 0);
            arr.push(subarr.join ` + ` + &quot; = &quot; + n);
            if (n == 4) return [false, arr]
        }
        return [false, arr]
    };
    const button = document.getElementById('button');
    button.addEventListener('click', function(e) {
        result.innerHTML = '';

        if (isNaN(parseInt(input.value))) {
            result.innerHTML = &quot;To nie jest liczba&quot;;
            return false;
        }
        let isHappyNumber = imHappy(input.value);
        if (isHappyNumber[0]) {
            result.innerHTML = `&lt;strong class=&quot;isHappy&quot;&gt;${input.value} jest wesoła &lt;img class=&quot;emoji&quot; src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f917.png&quot; height=&quot;20&quot; width=&quot;20&quot;&gt;: &lt;/strong&gt;&lt;br/&gt;`;
            result.innerHTML += isHappyNumber[1].join ` -&gt;&lt;br/&gt;`;
        } else {
            result.innerHTML = `&lt;strong class=&quot;isUnHappy&quot;&gt; ${input.value} nie jest liczbą wesołą &lt;img class=&quot;emoji&quot; src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f622.png&quot; height=&quot;20&quot; width=&quot;20&quot;&gt;:&lt;/strong&gt;&lt;br/&gt;`;
            result.innerHTML += isHappyNumber[1].join ` -&gt;&lt;br/&gt;`;
        }
    })
    const tryNumber = document.getElementsByClassName(&quot;try&quot;)

    for (let i = 0; i &lt; tryNumber.length; i++) {
        tryNumber[i].addEventListener('click', function(e) {
            e.preventDefault();
            input.value = e.target.innerHTML;
            button.click()

        })
    }
&lt;/script&gt;

&lt;style&gt;
    .happyNumber a {
        cursor: pointer
    }
    
    .isUnHappy {
        color: #a54444
    }
    
    .isHappy {
        color: #44a547
    }
    
    .form {
        max-width: 250px;
        padding: 15px;
    }
    
    .form input {
        margin-bottom: 15px;
    }
    
    .happyNumber {
        padding: 30px;
        background: #ced8f54f;
        text-align: left;
        display: flex;
        flex-wrap: wrap;
        flex-direction: row;
    }
    
    .happyNumber h3 {
        display: block;
        text-align: left;
    }
    
    #result {
        border: 5px dotted #c8dae6;
        background: #fffeed;
        padding: 10px;
        margin: 15px;
        width: calc(100% - 250px - 10px - 45px);
        max-width: 100%;
        text-align: left;
        max-height: 350px;
        overflow: auto
    }
    
    @media all and (max-width:500px) {
        #result {
            width: 100%;
            max-width: 100%
        }
    }
&lt;/style&gt;

&lt;p&gt;Przejdźmy zatem do przełożenia algorytmu na kod.&lt;/p&gt;

&lt;h2 id=&quot;python---happynumbers&quot;&gt;Python - happyNumbers&lt;/h2&gt;
&lt;p&gt;Zacznę od python’a&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;imHappy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 1 z racji bycia 1 jest wesoła
&lt;/span&gt;            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)])&lt;/span&gt; 
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    
&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;:)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;imHappy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;:(&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Wytłumaczenia może wymagać linijka &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sum([int(i) ** 2 for i in str(n)]) &lt;/code&gt;.&lt;br /&gt;
Linijka ta odpowiada za główne nasze obliczenia sumy kwadratów cyfr składających się na liczbę. Używam &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;str&lt;/code&gt; by liczbę przkonwertować na typ string - tak łatwiej się interuje (&lt;em&gt;przynajmniej mi&lt;/em&gt;). Natomiast &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;** 2&lt;/code&gt; oznacza do potęgi 2, jest krócej niż używanie &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pow()&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&quot;php---happynumbers&quot;&gt;PHP - happyNumbers&lt;/h2&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;imHappy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;c1&quot;&gt;//reduce czyli doprowadź operację na tablicy do jednej wartości&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;array_reduce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str_split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;        
        
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;var_dump&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;imHappy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Powyższe, główne obliczanie można by było napisać zamiast na &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;array_reduce()&lt;/code&gt; na połączeniu &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;array_sum()&lt;/code&gt; i &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;array_map()&lt;/code&gt;. Jednak ostatnio jakoś lubię reduce, choć wiem, że jest “najcięższy”.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;        &lt;span class=&quot;nv&quot;&gt;$n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;array_sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;array_map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;          
          &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str_split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)));&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;javascript---happynumbers&quot;&gt;Javascript - happyNumbers&lt;/h2&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;imHappy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;``&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;imHappy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; :)`&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; :(`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Tutaj wyjaśnienia może wymagać jedynie &lt;strong&gt;0&lt;/strong&gt; w &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;reduce()&lt;/code&gt;. Otórz na starcie interacji po tablicy &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;reduce()&lt;/code&gt; pobiera  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a&lt;/code&gt; i &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;b&lt;/code&gt; jako pierwszy i drugi indeks tablicy, czyli &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a = arr[0]&lt;/code&gt; a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;b = arr[1]&lt;/code&gt;. Jeśli natomiast zainicjujemy ją z wartością np. 0, to na starcie naszych obliczeń zmienna &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a = 0&lt;/code&gt; a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;b = arr[0]&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;błąd-dużych-liczb-nie-tylko&quot;&gt;Błąd dużych liczb? Nie tylko&lt;/h2&gt;
&lt;p&gt;Przy rozwiązywaniu tego zadania natknęłam się na pewien błąd. Warto takie rzeczy sobie zapisywać w pamięci. 
Błąd odnosi się w tym przypadku do dużych liczb podawanych zarówno w &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;js&lt;/code&gt; i w &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;php&lt;/code&gt;. Ale o tym w moim wpisie odnośnie &lt;a href=&quot;../floating-point-problem&quot;&gt;“Floating-point problem”&lt;/a&gt;
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Happy_number&quot; target=&quot;_blank&quot;&gt;HappyNumbers w Wikipedii&lt;/a&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Edyta Jozdowska</name></author><category term="[&quot;bitwy programowania&quot;, &quot;php&quot;, &quot;js&quot;, &quot;python&quot;]" /><category term="php" /><category term="js" /><category term="python" /><summary type="html">O liczbach, które matematycy nazwali wesołymi, choć dla mnie są szczęśliwymi.</summary></entry><entry><title type="html">Formatowanie liczb</title><link href="http://localhost:4000/blog/liczby/" rel="alternate" type="text/html" title="Formatowanie liczb" /><published>2020-02-03T13:47:00+01:00</published><updated>2020-02-03T13:47:00+01:00</updated><id>http://localhost:4000/blog/liczby</id><content type="html" xml:base="http://localhost:4000/blog/liczby/">&lt;p&gt;Niekiedy w bitwach programowania nie ma opisu zadania. Są jedynie pokazane testy i należy na ich podstawie domyśleć się, co należy zrobić.
Na poniższym zadaniu poległam. Do końca nie wiedziałam o co chodzi. Oczywiście po testach widziałam, że dotyczy ono różnego zapisu liczb. 15 minut jednak było zbyt krótkim czasem dla mnie, by  znaleźć rozwiązanie. A okazało się banalne.&lt;/p&gt;

&lt;div class=&quot;language-config highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;# TEST 1
&lt;/span&gt;	&lt;span class=&quot;n&quot;&gt;INPUT&lt;/span&gt;: &lt;span class=&quot;m&quot;&gt;15&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;OUTPUT&lt;/span&gt;: &lt;span class=&quot;n&quot;&gt;xfb1111o17&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# TEST 2
&lt;/span&gt;	&lt;span class=&quot;n&quot;&gt;INPUT&lt;/span&gt;: &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;OUTPUT&lt;/span&gt;: &lt;span class=&quot;n&quot;&gt;x0b0o0&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# TEST 3
&lt;/span&gt;	&lt;span class=&quot;n&quot;&gt;INPUT&lt;/span&gt;: &lt;span class=&quot;m&quot;&gt;328&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;OUTPUT&lt;/span&gt;: &lt;span class=&quot;n&quot;&gt;x148b101001000o510&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# TEST 4
&lt;/span&gt;	&lt;span class=&quot;n&quot;&gt;INPUT&lt;/span&gt;: &lt;span class=&quot;m&quot;&gt;831039&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;OUTPUT&lt;/span&gt;: &lt;span class=&quot;n&quot;&gt;xcae3fb11001010111000111111o3127077&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Na powyższej podsatwie należało podać kod, który przekształci liczbę w odpowiednio zakodowany ciąg. Dopiero po skończonej bitwie, kiedy można zobaczyć kod innych, o ile go udostępnią - dowiedziałam się o co chodziło. Rozłóżmy ten ciąg na czynniki pierwsze, składa się z cyfr i liter.&lt;/p&gt;

&lt;p&gt;Najczęściej występującymi literami są: &lt;strong&gt;x&lt;/strong&gt;, &lt;strong&gt;b&lt;/strong&gt; i &lt;strong&gt;o&lt;/strong&gt;. &lt;strong&gt;x&lt;/strong&gt;f&lt;strong&gt;b&lt;/strong&gt;1111&lt;strong&gt;o&lt;/strong&gt;17, &lt;strong&gt;x&lt;/strong&gt;0&lt;strong&gt;b&lt;/strong&gt;0&lt;strong&gt;o&lt;/strong&gt;0, &lt;strong&gt;x&lt;/strong&gt;148&lt;strong&gt;b&lt;/strong&gt;101001000&lt;strong&gt;o&lt;/strong&gt;510, powtarzają się w każdym ciągu. x = HEX, b = BIN i o = OCT, co odpowiada zapisowi liczby w kodzie 16-szesnastkowym, 2-dwójkowym i 8-ósemkowym. &lt;strong&gt;Tak, jak ktoś wskaże rozwiązanie, wydaje się to tak oczywiste&lt;/strong&gt; :smile:&lt;/p&gt;

&lt;h1 id=&quot;javascript&quot;&gt;JavaScript&lt;/h1&gt;
&lt;p&gt;Kod JS na rozwiązanie - kilka podejść. Ponieważ zawsze mamy jakiś wybór przy kodowaniu i kilka sposobów rozwiązania.&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c1&quot;&gt;//z Map&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]];&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// OUTPUT: xfb1111o17&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Niby założenie dobre, ale zastanówmy się. Tablica &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;k&lt;/code&gt; jest tak kiepsko napisana, że nie chciałabym jej zobaczyć w żadnym kodzie. Chcę użyć &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;k = {'x':16,'b':2,'o':16}&lt;/code&gt;. Powtórzmy powyższy kod, dostosowując go do danej wejściowej &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;k&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;entries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// OUTPUT: xfb1111o17&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Object.entries(k)&lt;/code&gt; tworzy dokładnie taką samą tablicę &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[['x',16],['b',2],['o',16]]&lt;/code&gt; z obiektu &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;{'x':16,'b':2,'o':16}&lt;/code&gt;. Jak dla mnie jednak trochę za długo, jak na taką prostą oeprację. Chcemy interować po obiekcie &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;k&lt;/code&gt; więc po co przekształcać go na &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;array&lt;/code&gt;?
&lt;strong&gt;Kod do przepisania!&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// OUTPUT: xfb1111o17&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Szybciej prawda :) Tylko czy do tego zadania potrzebna nam jest loop’a.&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`x`&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`b`&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`o`&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Patrząc na całość, kod ze zwykłym loop na obiekcie, najbardziej do mnie przemawia.&lt;/p&gt;

&lt;h1 id=&quot;python&quot;&gt;Python&lt;/h1&gt;
&lt;p&gt;Zobaczmy Pythona, z zastosowaniem funkcji wbudowanych &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bin(), hex() i oct()&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'h'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;hex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;bin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'o'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;oct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:])&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# OUTPUT: xfb1111o17
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Jak dla mnie to nie jest po pytonowsku, mimo, że w Python pisane :smile: Idea Pythona to prostota.
Wiedząc, że od wersji Pythona 3.6 wprowadzono nowy sposób formatowania liczb poprzez &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;f{liczba:format}&lt;/code&gt; powyższe możemy zapisać po prostu:&lt;/p&gt;
&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'x&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# OUTPUT: xfb1111o17
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Teraz dla mnie jest po pythonowku. I to rozwiązanie przyjmuję :smile:&lt;/p&gt;

&lt;h1 id=&quot;php&quot;&gt;PHP&lt;/h1&gt;
&lt;p&gt;Czas na PHP. Wpierw z wykorzystaniem funkcji wbudowanych &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dechex()&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;decbin()&lt;/code&gt; i &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;decoct()&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;x&quot;&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;dechex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;decbin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;o&quot;&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;decoct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// OUTPUT: xfb1111o17&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Powyższy kod jest czytelny, ale za długi, na pewno da się napisać inaczej :smile:
PHP z fromatowaniem:&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;x%xb%bo%o&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// OUTPUT: xfb1111o17&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;PHP, tak samo jak &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python&lt;/code&gt; ma możliwość przedstawiania danych w odpowiednich formatach. Służą do tego różne funkcje &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;printf()&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sprintf()&lt;/code&gt; i jeszcze parę.
Niby wszystko jest poprawnie, ale denerwuje mnie powtórzenie trzy razy $n. Da się inaczej:&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'x%1$xb%1$bo%1$o'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Do &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;printf()&lt;/code&gt; możemy wchodzić z kilkoma argumentami, każdy otrzymuje swój numer. Wskazujemy go za pomocą albo liczby pożądkowej, jak w tym przypadku &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;%1&lt;/code&gt;, albo po jej formacie czyli dla liczby to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;%d&lt;/code&gt;. Wszystko zależy jak ułożymy swój input. W tym przypadku użycie &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;%d&lt;/code&gt; będzie skutkowało błędem:&lt;/p&gt;

&lt;p class=&quot;error&quot;&gt;Warning:  printf(): Too few arguments in […][…] on line xxx&lt;/p&gt;

&lt;p&gt;Brrr, jest to najbardziej zaciemniona wersja w PHP :rofl:.&lt;/p&gt;

&lt;p&gt;Przejdźmy do zetsawienia długości:&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c1&quot;&gt;// PYTHON No2 =&amp;gt; 28&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`print(f'x{n:x}b{n:b}o{n:o}')`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// PHP No2 =&amp;gt; 29&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`printf(&quot;x%xb%bo%o&quot;,$n,$n,$n);`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// PHP No3 =&amp;gt; 29&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`printf('x%1$xb%1$bo%1$o',$n);`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// PYTHON No1 =&amp;gt; 45&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`print('h'+hex(n)[-1:]+bin(n)+'o'+oct(n)[-1:])`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// PHP No1 =&amp;gt; 50&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`echo &quot;x&quot;.dechex($n).&quot;b&quot;.decbin($n).&quot;o&quot;.decoct($n);`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// JAVASCRIPT No3 =&amp;gt; 69&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`s='';k={x:16,b:2,o:8}for(a in k){s+=a+n.toString(k[a])}
console.log(s)`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// JAVASCRIPT No4 =&amp;gt; 74&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`console.log('x'+n.toString('16')+'b'+n.toString('2')+
'o'+n.toString('8'));`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// JAVASCRIPT No1 =&amp;gt; 91&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`k=[['x',16],['b',2],['o',16]];console.log(k.map((a,b)=&amp;gt;a[0]+(n*1)
.toString(a[1])).join(''))`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// JAVASCRIPT No2 =&amp;gt; 98 - o dziwo, choć kod jest ładniejszy&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`k='x':16,'b':2,'o':16}console.log(Object.entries(k).map((a,b)=&amp;gt;a[0]
+n.toString(a[1]+'')).join(''))`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;W moim zestawieniu długości znów &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Python&lt;/code&gt; wygrywa. Ma on przewagę nad PHP znów o jeden znak i pewnie trudno zgadnąć o który &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;;&lt;/code&gt;
Należy pamiętać, że w PHP mamy zapis zmiennych &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$&lt;/code&gt;, co kod wydłuża, też o dodatkowy znak :rofl: - wnioski pozostawiam do wyciągniecią samemu :wink:&lt;/p&gt;

&lt;p&gt;Przygotowując po raz kolejny zestawienie, naszła mnie myśl, choć niektórzy się może obrażą na mnie. 
&lt;strong&gt;PHP jest badzo podobny do pythona.&lt;/strong&gt; Przynajmniej w niektórych kwestiach.&lt;/p&gt;</content><author><name>Edyta Jozdowska</name></author><category term="[&quot;bitwy programowania&quot;, &quot;php&quot;, &quot;js&quot;, &quot;python&quot;]" /><category term="python" /><category term="js" /><category term="php" /><category term="battle" /><summary type="html">Niekiedy w bitwach programowania nie ma opisu zadania. Są jedynie pokazane testy i należy na ich podstawie domyśleć się, co należy zrobić. Na tym zadaniu poległam.</summary></entry><entry><title type="html">Wyzwanie? The River I</title><link href="http://localhost:4000/blog/wyzwanie-the-river-i/" rel="alternate" type="text/html" title="Wyzwanie? The River I" /><published>2020-02-02T06:03:00+01:00</published><updated>2020-02-02T06:03:00+01:00</updated><id>http://localhost:4000/blog/wyzwanie-the-river-i</id><content type="html" xml:base="http://localhost:4000/blog/wyzwanie-the-river-i/">&lt;p&gt;&lt;a href=&quot;https://www.codingame.com/ide/puzzle/the-river-i-&quot; target=&quot;_blank&quot;&gt;Ostatnie zadanie w codingGame&lt;/a&gt; o tytule &lt;strong&gt;River-I&lt;/strong&gt; uświadomiło mi jedną, ważną rzecz. Czasem przekombinowanie prowadzi na manowce. Treść zadania brzmiała tak:&lt;/p&gt;

&lt;div class=&quot;language-config w50 highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;# TREŚĆ ZADANIA 
&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;digital&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;river&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sequence&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;every&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;followed&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;same&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plus&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;its&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;digits&lt;/span&gt;. 
&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;such&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sequence&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;123&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;followed&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;129&lt;/span&gt; 
(&lt;span class=&quot;n&quot;&gt;since&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; + &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; + &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt; = &lt;span class=&quot;m&quot;&gt;6&lt;/span&gt;), 
&lt;span class=&quot;n&quot;&gt;which&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;again&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;followed&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;141&lt;/span&gt;.

&lt;span class=&quot;n&quot;&gt;We&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;call&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;digital&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;river&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;river&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;K&lt;/span&gt;, &lt;span class=&quot;n&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;starts&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;K&lt;/span&gt;.

&lt;span class=&quot;n&quot;&gt;For&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;example&lt;/span&gt;, &lt;span class=&quot;n&quot;&gt;river&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sequence&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;beginning&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;with&lt;/span&gt; 
{&lt;span class=&quot;m&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;m&quot;&gt;14&lt;/span&gt;, &lt;span class=&quot;m&quot;&gt;19&lt;/span&gt;, &lt;span class=&quot;m&quot;&gt;29&lt;/span&gt;, &lt;span class=&quot;m&quot;&gt;40&lt;/span&gt;, &lt;span class=&quot;m&quot;&gt;44&lt;/span&gt;, &lt;span class=&quot;m&quot;&gt;52&lt;/span&gt;, ... } &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;river&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;471&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sequence&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;beginning&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;with&lt;/span&gt; {&lt;span class=&quot;m&quot;&gt;471&lt;/span&gt;, &lt;span class=&quot;m&quot;&gt;483&lt;/span&gt;, &lt;span class=&quot;m&quot;&gt;498&lt;/span&gt;,...}

&lt;span class=&quot;n&quot;&gt;Digital&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rivers&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;can&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;meet&lt;/span&gt;. &lt;span class=&quot;n&quot;&gt;This&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;happens&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;two&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;digital&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rivers&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;share&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;same&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;. 
&lt;span class=&quot;n&quot;&gt;River&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;32&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;meets&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;river&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;47&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;47&lt;/span&gt;,  
&lt;span class=&quot;n&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;river&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;471&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;meets&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;river&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;480&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;519&lt;/span&gt;.

&lt;span class=&quot;n&quot;&gt;Given&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;two&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;meeting&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;digital&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rivers&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;out&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;meeting&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;point&lt;/span&gt;.

(&lt;span class=&quot;n&quot;&gt;Idea&lt;/span&gt; : &lt;span class=&quot;n&quot;&gt;BIO&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;99&lt;/span&gt;)
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-config w50 highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;# INPUT:
&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Line&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;: &lt;span class=&quot;n&quot;&gt;The&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;first&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;river&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r1&lt;/span&gt;.
    &lt;span class=&quot;n&quot;&gt;Line&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;: &lt;span class=&quot;n&quot;&gt;The&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;second&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;river&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r2&lt;/span&gt;.

&lt;span class=&quot;c&quot;&gt;#  OUTPUT:
&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Line&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; : &lt;span class=&quot;n&quot;&gt;The&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;meeting&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;point&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rivers&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;given&lt;/span&gt;.

&lt;span class=&quot;c&quot;&gt;# CONSTRAINTS:
&lt;/span&gt;
    &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &amp;lt; &lt;span class=&quot;n&quot;&gt;r1&lt;/span&gt; ≤ &lt;span class=&quot;m&quot;&gt;20000000&lt;/span&gt;, &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &amp;lt; &lt;span class=&quot;n&quot;&gt;r2&lt;/span&gt; ≤ &lt;span class=&quot;m&quot;&gt;20000000&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# EXAMPLE:
&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Input&lt;/span&gt;:
       &lt;span class=&quot;n&quot;&gt;r1&lt;/span&gt;: &lt;span class=&quot;m&quot;&gt;32&lt;/span&gt;, &lt;span class=&quot;n&quot;&gt;r2&lt;/span&gt;: &lt;span class=&quot;m&quot;&gt;47&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Output&lt;/span&gt;:
        &lt;span class=&quot;m&quot;&gt;47&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# TESTS: 
&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;01&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;We&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;will&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;meet&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;47&lt;/span&gt;       &lt;span class=&quot;m&quot;&gt;02&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r1&lt;/span&gt; &amp;lt; &lt;span class=&quot;n&quot;&gt;r2&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;03&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r1&lt;/span&gt; &amp;gt; &lt;span class=&quot;n&quot;&gt;r2&lt;/span&gt;                  &lt;span class=&quot;m&quot;&gt;04&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;More&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;than&lt;/span&gt;... &lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;.
&lt;span class=&quot;m&quot;&gt;05&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;More&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;than&lt;/span&gt;... &lt;span class=&quot;n&quot;&gt;II&lt;/span&gt;.         &lt;span class=&quot;m&quot;&gt;06&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;River&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2489&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;07&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;River&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;13&lt;/span&gt;                 &lt;span class=&quot;m&quot;&gt;08&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Primes&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;09&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Even&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bigger&lt;/span&gt;

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p class=&quot;clear&quot;&gt;Na pierwszy rzut oka do zastosowania jest &lt;a href=&quot;../digital_root&quot;&gt;digital root&lt;/a&gt;, jednak tylko w swojej pierwszej części odpowiedzialnej za sumowanie więc efektywny wzór matematyczny nie zda nam się na nic.&lt;/p&gt;

&lt;p&gt;Zastanówmy się jak możemy wykonać zadanie:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-graph&quot;&gt;graph TD
A((r1)) &amp;amp; B((r2))--&amp;gt;C[Zsumuj wszystkie cyfry&amp;lt;br/&amp;gt;składające się na liczbę r1 i r2]
G.-&amp;gt;|nie|C
C--&amp;gt;G{r1=r2&amp;lt;br/&amp;gt;?}
G.-&amp;gt;|tak|H(Wypisz przecięcie)
classDef decision fill:#fbfbd4,stroke:#444,stroke-width:1px
classDef inp fill:#f7f7f7,stroke:#444,stroke-width:1px
class A,B,E,F,H inp;
class G decision;
classDef wynik fill:#d2e5fb,stroke:#96c5fb
class H wynik;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To podstawowy graph, jednak pomija on jedną istotną informację. &lt;strong&gt;Punkt przecięcia może być przy 3 interacji liczby r1 i 5 interacji liczby r2.&lt;/strong&gt; Poszczególne interacje należałoby gdzieś zapisać np. &lt;strong&gt;w tablicy&lt;/strong&gt;. Tak można wywnioskować czytając treść zadania, więc powyższy graph musimy zmodyfikować.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-graph&quot;&gt;graph TD
A((r1)) &amp;amp; B((r2))--&amp;gt;C[&quot;Zsumuj wszystkie cyfry&amp;lt;br/&amp;gt;składające się na liczbę r1[ i ] i r2[ i ]&amp;lt;br/&amp;gt;w iteracji&quot;]
C--&amp;gt; I[&quot;zapisz r1[ i ] w tablicę&quot;] &amp;amp; J[&quot;zapisz r2[ i ] w tablicę&quot;] 
I &amp;amp; J--&amp;gt;K[/&quot;Jeden z el. w tablicy r1 lub r2&amp;lt;br/&amp;gt;równy jest któremuś  el. tablicy r2 lub r1&quot;/]
K.-&amp;gt;|tak|H(Wypisz przecięcie)
K.-&amp;gt;|nie|C

classDef decision fill:#fbfbd4,stroke:#444,stroke-width:1px
classDef inp fill:#f7f7f7,stroke:#444,stroke-width:1px
classDef note fill:#fbfbd4,stroke:#444,stroke-width:1px,stroke-dasharray:2
classDef added fill:#efcbcb,stroke:#ff7070
class A,B,E,F,H inp;
class G decision;
class K note;
class I,J added;
classDef wynik fill:#d2e5fb,stroke:#96c5fb
class H wynik;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Przekonana o słuszności swojego wyboru przystąpiłam do kodowania. Nie chcąc przekształcać zmiennych &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$r1&lt;/code&gt; i &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$r2&lt;/code&gt; przypisałam je do zmiennych &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$a&lt;/code&gt; i &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$b&lt;/code&gt; i na tych wartościach napisałam resztę kodu:&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nb&quot;&gt;fscanf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;STDIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;%d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$r1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;fscanf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;STDIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;%d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$r2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$r1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$r2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)){&lt;/span&gt;
   &lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;array_sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str_split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
   &lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;array_sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str_split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
   &lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;nv&quot;&gt;$r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;array_intersect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;implode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;implode()&lt;/code&gt; dla zmiennej &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$r&lt;/code&gt; jest dlatego, gdyż wynik z &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;array_intersect()&lt;/code&gt; jest zwrotem dwóch tablic. Spłaszczam więc je do poszczególnych wartości, a że spodziewam się jedynie jednej wartości, nie oddzielam ich niczym, stąd &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;''&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Zapuszczam testy:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;TEST 1&lt;/th&gt;
      &lt;th&gt;Test 2&lt;/th&gt;
      &lt;th&gt;TEST 3&lt;/th&gt;
      &lt;th&gt;Test 4&lt;/th&gt;
      &lt;th&gt;TEST 5&lt;/th&gt;
      &lt;th&gt;Test 6&lt;/th&gt;
      &lt;th&gt;TEST 7&lt;/th&gt;
      &lt;th&gt;Test 8&lt;/th&gt;
      &lt;th&gt;TEST 9&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;:green_heart:&lt;/td&gt;
      &lt;td&gt;:green_heart:&lt;/td&gt;
      &lt;td&gt;:x:&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;Coś jest źle!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Sprawdzam :thinking:. Przecież nie tylko punkty z tablicy &lt;strong&gt;a&lt;/strong&gt; mogą być w &lt;strong&gt;b&lt;/strong&gt; ale i na odwrót. Poprawiam więc kod w ostatniej linijce pętli &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;while&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;  &lt;span class=&quot;nv&quot;&gt;$r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;array_intersect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;??&lt;/span&gt;  &lt;span class=&quot;nb&quot;&gt;array_intersect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Funkcja &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;array_intersect()&lt;/code&gt; sprawdza jedynie elementy pierwszego argumentu, czy zawarte są w tablicy drugiego argumentu. Potrzeba więc sprawdzić na odwrót.&lt;br /&gt;
Natomiast &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;??&lt;/code&gt; służy w &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;php&lt;/code&gt; jak &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;|&lt;/code&gt; w &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;js&lt;/code&gt; i oznacza jeśli nie pierwszy to drugi. Konstrukcja ta znacznie upraszcza kod i pozwala uniknąć &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;if'a&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Zapuszczam testy:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;TEST 1&lt;/th&gt;
      &lt;th&gt;Test 2&lt;/th&gt;
      &lt;th&gt;TEST 3&lt;/th&gt;
      &lt;th&gt;Test 4&lt;/th&gt;
      &lt;th&gt;TEST 5&lt;/th&gt;
      &lt;th&gt;Test 6&lt;/th&gt;
      &lt;th&gt;TEST 7&lt;/th&gt;
      &lt;th&gt;Test 8&lt;/th&gt;
      &lt;th&gt;TEST 9&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;:green_heart:&lt;/td&gt;
      &lt;td&gt;:green_heart:&lt;/td&gt;
      &lt;td&gt;:green_heart:&lt;/td&gt;
      &lt;td&gt;:green_heart:&lt;/td&gt;
      &lt;td&gt;:green_heart:&lt;/td&gt;
      &lt;td&gt;:green_heart:&lt;/td&gt;
      &lt;td&gt;:green_heart:&lt;/td&gt;
      &lt;td&gt;:green_heart:&lt;/td&gt;
      &lt;td&gt;:x:&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;Co jest :angry: ?&lt;/strong&gt;&lt;br /&gt;
 Jeszcze raz sprawdzam testy, może coś poszło nie tak:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;TEST 1&lt;/th&gt;
      &lt;th&gt;Test 2&lt;/th&gt;
      &lt;th&gt;TEST 3&lt;/th&gt;
      &lt;th&gt;Test 4&lt;/th&gt;
      &lt;th&gt;TEST 5&lt;/th&gt;
      &lt;th&gt;Test 6&lt;/th&gt;
      &lt;th&gt;TEST 7&lt;/th&gt;
      &lt;th&gt;Test 8&lt;/th&gt;
      &lt;th&gt;TEST 9&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;:green_heart:&lt;/td&gt;
      &lt;td&gt;:green_heart:&lt;/td&gt;
      &lt;td&gt;:green_heart:&lt;/td&gt;
      &lt;td&gt;:green_heart:&lt;/td&gt;
      &lt;td&gt;:green_heart:&lt;/td&gt;
      &lt;td&gt;:green_heart:&lt;/td&gt;
      &lt;td&gt;:green_heart:&lt;/td&gt;
      &lt;td&gt;:green_heart:&lt;/td&gt;
      &lt;td&gt;:x:&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Nie wiem ile bym nad tym siedziała, być może do tej pory. Na chwilę obecną nie jestem w stanie tego ocenić. Mój przyjaciel, który rozwiązywał to samo zadanie, tyle, że w &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python&lt;/code&gt; natknął się na podobny problem. Jemu jednak rozwiązanie go poszło szybciej i mi podpowiedział, że nie potrzeba do wykonania zadania tablic.&lt;/p&gt;

&lt;p&gt;Skoro nie tablice to znaczy, że wartości jakoś sobie odpowiadają w każdej z interacji. Tutaj przyszedł mi na myśl TEST 3, w którym wejściowe wartości były &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$r1 &amp;gt; $r2&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Sprawdzając i debugując wartości z kodu na niższych liczbach doszłam do wniosku, że faktycznie, nie jest potrzebna tablica i przechowywanie wartości od samego początku kodu. &lt;strong&gt;Wystarczy sprawdzić, która z tych liczb jest mniejsza i ją zsumować&lt;/strong&gt;. Wynik zapisać do następnej interacji, jeśli warunek, że są sobie równe nie jest spełniony. 
 Powinno się przyjąć jakieś ograniczenie, które zostało określone w CONSTRAINTS &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$r1&lt;/code&gt; i &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$r2&lt;/code&gt; &amp;lt; &lt;strong&gt;20000000&lt;/strong&gt; i wtedy przerwać kod, gdyby liczby nie były nigdy sobie równe. &lt;strong&gt;W praktyce zawsze powinniśmy  mieć warunek opuszczający zapętlenie takie jak while&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Mniej więcej wygląda to tak:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-graph&quot;&gt;graph TD
A((r1)) &amp;amp; B((r2))--&amp;gt;C{&quot;Sprawdź,&amp;lt;br/&amp;gt;czy wartość&amp;lt;br/&amp;gt;r1 i r2 są&amp;lt;br/&amp;gt;&amp;lt;strong&amp;gt;różne&amp;lt;/strong&amp;gt;&quot;}
C.-&amp;gt;|tak|D[&quot;Zsumuj tą, która jest mniejsza&quot;]
D--&amp;gt;E[&quot;Uaktualnij zsumowaną wartość&quot;]
E.-&amp;gt;|powrót do pętli|C
C.-&amp;gt;|nie|O[&quot;Wyjdź z pętli&quot;]--&amp;gt;H(Wypisz r1 lub r2)


classDef decision fill:#fbfbd4,stroke:#444,stroke-width:1px
classDef inp fill:#f7f7f7,stroke:#444,stroke-width:1px
classDef note fill:#fbfbd4,stroke:#444,stroke-width:1px,stroke-dasharray:2
classDef added fill:#efcbcb,stroke:#ff7070
classDef wynik fill:#d2e5fb,stroke:#96c5fb
class H wynik;
class A,B,E,F,H inp;
class C,O decision;
class K note;
class O added;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Zabrałam się za pisanie.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nb&quot;&gt;fscanf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;STDIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;%d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$r1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;fscanf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;STDIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;%d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$r2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$r1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$r2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;    
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;array_sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str_split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20000000&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20000000&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)){&lt;/span&gt;    
   &lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; 
   &lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
   &lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Krótkie wyjaśnienie.&lt;/strong&gt; Konstrukcja &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;warunek  ? prawda : fałsz&lt;/code&gt; odpowiada zwykłej konstrukcji &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;if&lt;/code&gt; zapisanej w uproszczonej formie i jest często stosowana w &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;php&lt;/code&gt; i w &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;js&lt;/code&gt;. Przynamniej przeze mnie.&lt;/p&gt;

&lt;p&gt;Czas na testy:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;TEST 1&lt;/th&gt;
      &lt;th&gt;Test 2&lt;/th&gt;
      &lt;th&gt;TEST 3&lt;/th&gt;
      &lt;th&gt;Test 4&lt;/th&gt;
      &lt;th&gt;TEST 5&lt;/th&gt;
      &lt;th&gt;Test 6&lt;/th&gt;
      &lt;th&gt;TEST 7&lt;/th&gt;
      &lt;th&gt;Test 8&lt;/th&gt;
      &lt;th&gt;TEST 9&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;:green_heart:&lt;/td&gt;
      &lt;td&gt;:green_heart:&lt;/td&gt;
      &lt;td&gt;:green_heart:&lt;/td&gt;
      &lt;td&gt;:green_heart:&lt;/td&gt;
      &lt;td&gt;:green_heart:&lt;/td&gt;
      &lt;td&gt;:green_heart:&lt;/td&gt;
      &lt;td&gt;:green_heart:&lt;/td&gt;
      &lt;td&gt;:green_heart:&lt;/td&gt;
      &lt;td&gt;:green_heart:&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;:hugs: :hugs: :hugs: :hugs: :hugs: :hugs: :hugs: :hugs:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Wszystkie testy zaliczone.&lt;/strong&gt; Z tej batalii wyszłam zwycięsko.&lt;/p&gt;

&lt;p&gt;Nie zdradzę, co jestem winna przyjacielowi za podpowiedź :rofl:, ale zasłużył sobie w pełni.&lt;/p&gt;</content><author><name>Edta Jozdowska</name></author><category term="[&quot;bitwy programowania&quot;, &quot;php&quot;]" /><category term="php" /><category term="battle" /><summary type="html">Ostatnie zadanie w codingGame o tytule River-I uświadomiło mi jedną, ważną rzecz. Czasem przekombinowanie prowadzi na manowce. Treść zadania brzmiała tak:</summary></entry><entry><title type="html">Leet speak</title><link href="http://localhost:4000/blog/leet-speak/" rel="alternate" type="text/html" title="Leet speak" /><published>2020-02-01T10:17:00+01:00</published><updated>2020-02-01T10:17:00+01:00</updated><id>http://localhost:4000/blog/leet-speak</id><content type="html" xml:base="http://localhost:4000/blog/leet-speak/">&lt;p&gt;Jak wspominałam we wpisie &lt;a href=&quot;../digital_root&quot;&gt;Digital root&lt;/a&gt; biorę udział w zawodach programowania na czas i długość kodu. Przyznam, że z czasem jest u mnie kiepsko, muszę się dobrze zastanowić co mam zrobić i jak to zrobić, a sekundy, niestety, lecą.&lt;/p&gt;

&lt;p&gt;Po bitwie jednak kopiuję sobie wszystko i na spokojnie analizuję swój kod, kod innych, jak też myślę, w jaki sposób faktycznie można by było dane zadanie rozwiązać najmniejszą ilością znaków w językach jakie znam i które lubię: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;js&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;php&lt;/code&gt; i &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python&lt;/code&gt;. Fantastyczny sposób na, wydawałoby się, mało wymagającym kodzie, by szlifować swoje umiejętności.&lt;/p&gt;

&lt;p&gt;W jednej z bitew był do napisania kod, który przekształci zwykły string na tzw. &lt;a href=&quot;https://pl.wikipedia.org/wiki/Leet_speak&quot; tagret=&quot;_blank&quot;&gt;Leet speak = 1337 5p34k&lt;/a&gt; w podstawowej formie, czyli litery zamieni na odpowiadające im cyfry.
W samym zadaniu nie brałam udziału, ale swój kod i tak napisałam :rofl:&lt;/p&gt;

&lt;h1 id=&quot;leet-speak-lub-inaczej-1337-5p34k&quot;&gt;Leet speak lub inaczej 1337 5p34k&lt;/h1&gt;
&lt;p&gt;Rozpatrzmy jak w podstawowej formie będzie wyglądała zamiana:&lt;br /&gt;
‘O’ =&amp;gt; ‘0’&lt;br /&gt;
‘L’ =&amp;gt; ‘1’&lt;br /&gt;
‘Z’ =&amp;gt; ‘2’&lt;br /&gt;
‘E’ =&amp;gt; ‘3’&lt;br /&gt;
‘A’ =&amp;gt; ‘4’&lt;br /&gt;
‘S’ =&amp;gt; ‘5’&lt;br /&gt;
‘G’ =&amp;gt; ‘6’&lt;br /&gt;
‘T’ =&amp;gt; ‘7’&lt;br /&gt;
‘B’ =&amp;gt; ‘8’&lt;br /&gt;
‘Q’ =&amp;gt; ‘9’&lt;br /&gt;
Uważna osoba spostrzegła zapewne, że cyfry zostały tak dobrane aby przypominać odpowiadające im litery. 
W zadaniu miały zostać zamienione zarówno litery pisane drukowanymi literami jak i małymi.&lt;/p&gt;

&lt;h2 id=&quot;kod-php&quot;&gt;Kod PHP&lt;/h2&gt;
&lt;p&gt;Zacznijmy od kodu &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;php&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;heLlo wOrlD, my Name is Edith&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str_ireplace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str_split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'olzeasgtbg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str_split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'0123456789'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// OUTPUT: h3110 w0r1D, my N4m3 i5 3di7h&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Sam kod wygląda bardzo prosto prawda :smile:.&lt;br /&gt;
Weź ciąg znaków, zamień go na tablicę i dla poszczególnych liter wstaw cyfry. Zastosowana funkcja &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;str_ireplcae()&lt;/code&gt;&lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;, jest wersją funkcji &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;str_replace()&lt;/code&gt;, jednak jest określaną jako &lt;em&gt;case-insesitive&lt;/em&gt;. Co można przetłumaczyć, że w tym wypadku nie będzie rozróżniała, czy zamienia dużą, czy małą literę. Dla niej i jedna, i druga jest taka sama.&lt;/p&gt;
&lt;blockquote class=&quot;error&quot;&gt;
  &lt;p&gt;Funkcje w &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;php&lt;/code&gt; oznaczone jako case-insesitive należy używać z głową, bo można otrzymać niespodziewane wyniki!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;python&quot;&gt;Python&lt;/h2&gt;
&lt;p&gt;Kolej na Pythona:&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;heLlo wOrlD, my Name is Edith&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;translate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'olzeasgtbgOLZEASGTBG'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'0123456789'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))))&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# OUTPUT: h3110 w0r1D, my N4m3 i5 3di7h
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dict()&lt;/code&gt;&lt;sup id=&quot;fnref:2&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; w &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python&lt;/code&gt; to tworzenie “słownika” - obiektu, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;zip()&lt;/code&gt;&lt;sup id=&quot;fnref:3&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt; natomiast tworzy iterator, który agreguje elementy. W powyższym połączenie dict i zip stworzy nam: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;{&quot;o&quot;:1,&quot;l&quot;:2,&quot;z&quot;:3...}&lt;/code&gt;. Niestety, znaki te są zapisane w kodzie ASCII, co zostanie zignorowane przez &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;translate&lt;/code&gt;, dlatego są przekształcane na bajty poprzez &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;b&lt;/code&gt; dodane na początku. Zabieg &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;'0123456789'*2&lt;/code&gt; ma za zadanie skrócenie kodu, ot każdy programista ułatwia sobie życie :smile: Powyższy kod, został poprawiony przez mojego przyjaciela. W historii git’a można sprawdzić jak wyglądał poprzedni, używał on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;maketrans()&lt;/code&gt;. Zawsze można nauczyć się nowego.&lt;/p&gt;

&lt;h2 id=&quot;js&quot;&gt;JS&lt;/h2&gt;
&lt;p&gt;No to został mi jedynie Javascript:&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;heLlo wOrlD, my Name is Edith&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;olzeasgtbg&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;``&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; 
  &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;RegExp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;ig&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;0123456789&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;``&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// OUTPUT: h3110 w0r1D, my N4m3 i5 3di7h&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Uwagi!!&lt;/strong&gt; powyższy kod został skrócony do jak najmniejszej ilości znaków, Nie jest on wydajny!!! Split dla ‘0123…’ jest wykonywany za każdą interacją, należałoby go przypisać w zmienną poza funkcją reduce, ale to już co najmniej 2 znaki więcej.&lt;/p&gt;

&lt;p&gt;Albo jak kto woli w starym stylu:&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c1&quot;&gt;// OLD Fashion Way&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;heLlo wOrlD, my Name is Edith&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;olzeasgtbg&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;``&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;RegExp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;ig&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// OUTPUT: h3110 w0r1D, my N4m3 i5 3di7h&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To sprawdzamy długość:&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c1&quot;&gt;// PYTHON =&amp;gt; 69&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`print(s.translate(dict(zip(b'olzeasgtbgOLZEASGTBG',
'0123456789'*2))))`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// PHP =&amp;gt; 70&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`echo str_ireplace(str_split('olzeasgtbg'),
str_split('0123456789'),$s);`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//Javascript odlway =&amp;gt; 93&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`m='olzeasgtbg'.split``;
for(let i=0;i&amp;lt;m.length;i++){
s=s.replace(new RegExp(m[i],&quot;ig&quot;),i+'');
}`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//Javascript ES6 =&amp;gt; 108&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`console.log('olzeasgtbg'.split&quot;&quot;.reduce((a,b,i)=&amp;gt;
a.replace(new RegExp(b,&quot;ig&quot;),'0123456789'.split&quot;&quot;[i])
,s))`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;strike&gt;W tym zestawieniu wygrywa, jak dla mnie **PHP :1st_place_medal: :1st_place_medal: :1st_place_medal:**, ale tylko dlatego przoduje przed pythonem, ponieważ nie trzeba nic powtarzać, ani stosować hacków.&lt;/strike&gt;
&lt;p&gt;Po poprawkach jakie zostały zgłoszone do kodu “węża”, znów &lt;strong&gt;Python&lt;/strong&gt; obejmuje prowadzenie  :1st_place_medal: :1st_place_medal: :1st_place_medal:&lt;/p&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;str_ireplace()&lt;/code&gt; w &lt;a href=&quot;https://www.php.net/manual/en/function.str-ireplace.php&quot; target=&quot;_blank&quot;&gt;dokumentacji PHP&lt;/a&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://docs.python.org/3/tutorial/datastructures.html#dictionaries&quot; target=&quot;_blank&quot;&gt;Dokumentacja Dictionaries&lt;/a&gt; &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://docs.python.org/3.3/library/functions.html#zip&quot; target=&quot;_blank&quot;&gt;Dokumentacja zip&lt;/a&gt; &lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Edyta Jozdowska</name></author><category term="[&quot;bitwy programowania&quot;, &quot;php&quot;, &quot;js&quot;, &quot;python&quot;]" /><category term="python" /><category term="js" /><category term="php" /><category term="battle" /><summary type="html">Jak wspominałam we wpisie Digital root biorę udział w zawodach programowania na czas i długość kodu. Przyznam, że z czasem jest u mnie kiepsko, muszę się dobrze zastanowić co mam zrobić i jak to zrobić, a sekundy, niestety, lecą.</summary></entry><entry><title type="html">Digital root</title><link href="http://localhost:4000/blog/digital_root/" rel="alternate" type="text/html" title="Digital root" /><published>2020-01-31T19:18:00+01:00</published><updated>2020-01-31T19:18:00+01:00</updated><id>http://localhost:4000/blog/digital_root</id><content type="html" xml:base="http://localhost:4000/blog/digital_root/">&lt;!-- TOC --&gt;

&lt;ul class=&quot;content_list&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1digital-root&quot;&gt;1.Digital Root&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#11przyk%c5%82ad&quot;&gt;1.1.Przykład&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#1php&quot;&gt;.1.PHP&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#2python&quot;&gt;.2.Python&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#3ruby&quot;&gt;.3.Ruby&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#4javascript&quot;&gt;.4.Javascript&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#5por%c3%b3wnanie-d%c5%82ugo%c5%9bci-kodu&quot;&gt;.5.Porównanie długości kodu&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#6math&quot;&gt;.6.Math&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#7debugowanie-i-wy%c5%9bwietlanie&quot;&gt;.7.Debugowanie i wyświetlanie&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;!-- /TOC --&gt;

&lt;p&gt;Dzisiaj przystąpiłam do zadania, które brzmiało:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;“W dowolnym języku programowania wykonaj digital root dla liczby plus 5 testów sprawdzających kod”.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tak wiem, dziwne mam rozrywki :smile:&lt;br /&gt;
Kodowanie było na czas więc nie przypadło mi to do gustu, jednak sam temat mnie zainteresował.&lt;/p&gt;

&lt;h1 id=&quot;1digital-root&quot;&gt;1.Digital Root&lt;/h1&gt;
&lt;p&gt;Wpierw należałoby się zapoznać z teorią. Co to digital root?&lt;br /&gt;
&lt;strong&gt;Digital root&lt;/strong&gt;: jest to suma poszczególnych cyfr, które składają się na daną liczbę, do momentu, gdy otrzymamy cyfrę od 0 do 9.&lt;br /&gt;
Całkiem dobrze tematyka digital root wyjaśniona jest na &lt;a href=&quot;http://mathworld.wolfram.com/DigitalRoot.html&quot;&gt;Wolfram Math World&lt;/a&gt;. Możesz też skoczyć &lt;a href=&quot;./#11przykład&quot;&gt;do przykładów w tym poście&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Zawody przegrałam :smile: . Na tym jednak nie poprzestałam. Ponieważ sam temat mnie zainteresował, zaczęłam się bawić. W piątkowy wieczór należy się trochę rozrywki każdemu :joy:&lt;/p&gt;

&lt;p&gt;Napisałam trzy skrypty. Jeden w &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;js&lt;/code&gt;, drugi w &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;php&lt;/code&gt; i trzeci w &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;py&lt;/code&gt;. Do tego posta dołączę jeszcze 4 w &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ruby&lt;/code&gt; dla porównania &lt;em&gt;(ten w ruby został ułożony przez osobę, która zawody wygrała)&lt;/em&gt;. Ogólnie w tych zawodach chodzi o to, by ułożyć w mniej niż 15 minut kod, który będzie jak najkrótszy. Liczy się czas, ale ważniejsza jest długość kodu.&lt;br /&gt;
&lt;strong&gt;I ta idea, ułożyć jak najkrótszy kod mi właśnie przyświecała.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Popatrzmy jakie kroki trzeba wykonać do obliczenia &lt;strong&gt;digital root&lt;/strong&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-graph&quot;&gt;graph TD
A(Input:&amp;lt;br/&amp;gt;Liczba jako String)--&amp;gt;B[Zsumuj wszystkie cyfry&amp;lt;br/&amp;gt;składające się na liczbę]
B--&amp;gt;C{Wynik jest&amp;lt;br/&amp;gt;jedną cyfrą?}
C.-&amp;gt;|NIE|A
C.-&amp;gt;|TAK|D(Wypisz wynik)
classDef decision fill:#fbfbd4,stroke:#444,stroke-width:1px
classDef inp fill:#f7f7f7,stroke:#444,stroke-width:1px
class A,D inp;
class C decision;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;11przykład&quot;&gt;1.1.Przykład&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;//digital_root(941); // 9 + 4 + 2 = 14, 1 + 4 = 5
//digital_root(132189); // 1 + 3 + 2 + 1 + 8 + 9 = 24, 2 + 4 = 6
//digital_root(493193); // 4 + 9 + 3 + 1 + 9 + 3 = 29, 2 + 9 = 11, 1 + 1 = 2
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Znamy już kroki przystąpmy do kodowania.&lt;br /&gt;
W zawodach daną wejściową był string i tego typu będę się trzymać w każdym kodzie.&lt;/p&gt;

&lt;h2 id=&quot;1php&quot;&gt;.1.PHP&lt;/h2&gt;

&lt;p&gt;Wpierw kod w &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;php&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'941'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//input&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;strlen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//loop until one digit&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;$n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;array_sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str_split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//the magic sum&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//output&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Całkiem fajnie prawda :smile:&lt;br /&gt;
W &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;php&lt;/code&gt; mamy gotową już funkcję, która wykona za nas całą operację na elementach tablicy &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;array_sum&lt;/code&gt; &lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; .&lt;br /&gt;
Dodatkowo &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;php&lt;/code&gt; jak widać ma gdzieś typy zmiennych &lt;sup id=&quot;fnref:2&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; :rofl:. Zmienna &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$n&lt;/code&gt; jest stringiem, ale skoro chce je sumować to traktuje poszczególne elementy tablicy jako liczby. I tak do momentu aż zmienna &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$n&lt;/code&gt; będzie jednocyfrowa. 
Na wyjściu mamy też liczbę, można ją zamienić do stringa np. poprzez dołączenie pustego ciągu znaków &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.''&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;2python&quot;&gt;.2.Python&lt;/h2&gt;
&lt;p&gt;To teraz &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;py&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'941'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Nie jest zbyt podobnie :rofl:&lt;br /&gt;
Tutaj już interujemy po poszczególnych znakach/cyfrach zamieniając ich typ na int, a zwracając na wyjściu typ string.&lt;br /&gt;
Do sumowania elementów zastosowana jest konstrukcja, za którą uwielbiam Python’a. Składnia &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x for x in list if cond&lt;/code&gt; jest jedną z najlepszych z jakimi się spotkałam :yum: &lt;sup id=&quot;fnref:3&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;. Niestety nie działa z &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;while&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;3ruby&quot;&gt;.3.Ruby&lt;/h2&gt;
&lt;p&gt;Teraz porównanie z &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ruby&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-rb highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;gets&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;chars&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:to_i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_s&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_i&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;W tym kodzie mogę podziwiać prostotę i przejrzystość. Nie znam &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ruby&lt;/code&gt; zbyt dobrze, jednak ten kod do mnie przemawia, jak bym czytała książkę: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;n.znaki.mapuj/interuj(zamień na integer).sumuj.konwerutj_do_stringa&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;4javascript&quot;&gt;.4.Javascript&lt;/h2&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;941&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;``&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;W tym kodzie zdecydowałam się na &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;reduce&lt;/code&gt; z tego względu, że na wejściu ma wynik poprzedniej operacji i aktualną wartość przy interacji, domyślnie na początku wchodzi z indeksem [0] i indeksem [1]. Wynikową reduce jest jedna liczba.&lt;/p&gt;

&lt;p&gt;Powyższy kod stosuje pewne osobliwości języka &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;js&lt;/code&gt;&lt;sup id=&quot;fnref:2:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;. Zresztą w &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;php&lt;/code&gt; można podobnie&lt;sup id=&quot;fnref:2:2&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;.&lt;br /&gt;
Ja nazywam je &lt;em&gt;hakami&lt;/em&gt;, ale świadczą one bardziej o słabym typowaniu zmiennych, ponieważ konwersja w &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;js&lt;/code&gt; i w &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;php&lt;/code&gt; stringa na liczbę może odbywać się poprzez &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;string*1&lt;/code&gt;, co w niektórych sytuacjach może prowadzić do błędów w przetwarzaniu kodu.&lt;br /&gt;
Dostępna jest w &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;js&lt;/code&gt; funkcja &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;parseInt(string)&lt;/code&gt;, z której powinno się korzystać, w &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;php&lt;/code&gt; zaś np. cast do typu zmiennej &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(int)string&lt;/code&gt;. Ale, to tak na marginesie.&lt;br /&gt;
Konwersja zaś liczby na string w powyższym kodzie odbywa się poprzez &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;+''&lt;/code&gt; gdzie jest dostępna funkcja &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;toSring(int)&lt;/code&gt;, ale ile to znaków więcej :sweat_smile:.&lt;br /&gt;
Nie zmienia to faktu, że np. w &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Python&lt;/code&gt; wykonanie podobnej operacji, czyli dodanie do liczby znaku, będzie skutkowało błędem:&lt;/p&gt;
&lt;blockquote class=&quot;error&quot;&gt;
  &lt;p&gt;TypeError: unsupported operand type(s) for +: ‘int’ and ‘str’&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;5porównanie-długości-kodu&quot;&gt;.5.Porównanie długości kodu&lt;/h2&gt;
&lt;p&gt;Zobaczmy w takim razie wyniki długości kodu &lt;em&gt;(potraktowałam wszelkie odstępy pomiędzy znakami używane dla czytelności, jako zbędne - i dostanę za to pewnie od przyjaciela po głowie, że to nie po pythonowsku :relaxed: :grin:)&lt;/em&gt;:&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c1&quot;&gt;//PYTHON=&amp;gt;47&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Python&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
&lt;span class=&quot;s2&quot;&gt;`while len(n)&amp;gt;1:n=str(sum([int(i) for i in n]))`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//PHP =&amp;gt; 48&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;PHP&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
&lt;span class=&quot;s2&quot;&gt;`while(strlen($n)&amp;gt;1)
$n=array_sum(str_split($n));`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//RUBY =&amp;gt;51&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Ruby&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
&lt;span class=&quot;s2&quot;&gt;`while n.length&amp;gt;1
n=n.chars.map(&amp;amp;:to_i).sum.to_s end`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//JS=&amp;gt;54&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Javascript&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
&lt;span class=&quot;s2&quot;&gt;`while(n.length&amp;gt;1)
n=n.split&quot;&quot;.reduce((a,b)=&amp;gt;a*1+b*1+'')`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//split`` powyżej powinno wyglądać tak, ale wolałam wstawić cudzysłów niż slashe&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;And the winner is: Python :1st_place_medal: :1st_place_medal: :1st_place_medal:&lt;/strong&gt; &lt;br /&gt;
Wpierw wydawało mi się, że wygra &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ruby&lt;/code&gt; lub &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;php&lt;/code&gt;, jednak odnosząc się do uwagi w appendindex &lt;sup id=&quot;fnref:3:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Python&lt;/code&gt; wygrywa o jeden znak.&lt;br /&gt;
I wydawało by się, że już nic z tego tematu nie można wyciągnąć więcej. Otóż, dokładnie, wydawałoby się.&lt;/p&gt;

&lt;h2 id=&quot;6math&quot;&gt;.6.Math&lt;/h2&gt;
&lt;p&gt;Drążąc temat znalazłam &lt;strong&gt;równanie matematyczne&lt;/strong&gt;, które w bardzo prosty i krótki sposób oblicza digital root. Całą teorię można przeczytać, wraz z warunkami na &lt;a href=&quot;http://mathworld.wolfram.com/DigitalRoot.html&quot;&gt;Wolfram Math World&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-Math&quot;&gt;//math, obliczenie digital root
1+(n-1)%9
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Nie na darmo się mówi już od starożytności, że Matematyka jest królową wszystkich nauk.&lt;br /&gt;
Krócej już się na pewno nie da :heart_eyes:&lt;/p&gt;

&lt;h2 id=&quot;7debugowanie-i-wyświetlanie&quot;&gt;.7.Debugowanie i wyświetlanie&lt;/h2&gt;
&lt;p&gt;Używając wzoru matematycznego &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ruby&lt;/code&gt; akurat obejmie prym, jeśli do długości kodu wliczymy również wyświetlenie wyniku, dzięki skróconej opcji &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;p&lt;/code&gt; na &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;print&lt;/code&gt;  :joy:&lt;/p&gt;

&lt;p&gt;Może należałoby się zastanowić, aby wprowadzić w innych językach jakieś skróty :thinking: 
Zauważcie:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;PHP&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;var_dump&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;print_r&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;printf&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;echo&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Python&lt;/strong&gt;:  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;print&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Javascript&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;console.log&lt;/code&gt; - co jest najdłuższe, najbardziej wkurzające i wielu z nas układa sobie funkcję log do stososowania w swoim kodzie.&lt;/li&gt;
  &lt;li&gt;A &lt;strong&gt;Ruby&lt;/strong&gt; , &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;p&lt;/code&gt;, po prostu &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;p&lt;/code&gt;. I to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;p&lt;/code&gt; chciałabym zobaczyć we wszystkich językach tutaj wymienionych :stuck_out_tongue:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-rb highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_i&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Tym postem zapoczątkowałam nową kategorię na swoim blogu &lt;a href=&quot;../kategoria/bitwy%20programowania&quot;&gt;“Bitwy programowania”&lt;/a&gt; gdzie będę zamieszczać co ciekawsze zadania :smile: 
&lt;strong&gt;Notatki:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.php.net/manual/en/function.array-sum.php&quot;&gt;Dokumentacja PHP - array_sum&lt;/a&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;Języki &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;js&lt;/code&gt; i &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;php&lt;/code&gt; właśnie poprzez te osobliwości traktowane są jako słabotypowane, przez co  niektórzy zajmujący się kodem uważają je jako języki gorsze. &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt; &lt;a href=&quot;#fnref:2:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt; &lt;a href=&quot;#fnref:2:2&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;Stringi w pythonie są traktowane wewnętrznie jako lista charów. Można się do nich odnosić i interować poprzez index. Test: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a = 'tekst' print(*a) #result: t e k s t&lt;/code&gt; &lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt; &lt;a href=&quot;#fnref:3:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Edyta Jozdowska</name></author><category term="[&quot;bitwy programowania&quot;, &quot;php&quot;, &quot;js&quot;, &quot;python&quot;]" /><category term="math" /><category term="python" /><category term="js" /><category term="ruby" /><category term="php" /><category term="battle" /><summary type="html">Porównanie kodu dla digital root. Ot, przy piątku należy się każdemu z nas wytchnienie od codziennych spraw. Ja sobie pograłam. Oczywiście w gry z programowania.</summary></entry><entry><title type="html">Tymczasowe zapisanie loginu i hasła dla gita</title><link href="http://localhost:4000/blog/cache-git-credential/" rel="alternate" type="text/html" title="Tymczasowe zapisanie loginu i hasła dla gita" /><published>2020-01-06T11:13:00+01:00</published><updated>2020-01-06T11:13:00+01:00</updated><id>http://localhost:4000/blog/cache-git-credential</id><content type="html" xml:base="http://localhost:4000/blog/cache-git-credential/">&lt;!-- TOC --&gt;

&lt;ul class=&quot;content_list&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1zapami%c4%99tanie-loginu-i-has%c5%82a---s%c5%82owa-wst%c4%99pu&quot;&gt;1.Zapamiętanie loginu i hasła - słowa wstępu&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2zapami%c4%99tanie-loginu-i-has%c5%82a&quot;&gt;2.Zapamiętanie loginu i hasła&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- /TOC --&gt;

&lt;h1 id=&quot;1zapamiętanie-loginu-i-hasła---słowa-wstępu&quot;&gt;1.Zapamiętanie loginu i hasła - słowa wstępu&lt;/h1&gt;
&lt;p&gt;Jakiś czas temu odbyłam z przyjacielem rozmowę na temat mojego podejścia do bezpieczeństwa. Według niego bardzo lekko traktuję bezpieczeństwo niektórych usług, jak prywatne konto dla githuba :blush:.&lt;br /&gt;
Stwierdził to na podstawie, między innymi, faktu, że swoje hasło i login miałam na trwałe zapisane w pliku, z którego podczas wysyłania aktualizacji korzystałam w skrypcie.&lt;/p&gt;

&lt;p&gt;Choć tego nie lubię :unamused: muszę przyznać mu rację. Owy plik miałam jedynie na swoim komputerze, na innych musiałam wpisywać z tzw. “ręki” dane logowania. Nie zmienia to faktu, że dane logowania były dostępne.&lt;/p&gt;

&lt;p&gt;Na szczęście git “jest” elastyczny :smile: - istnieje tymczasowe zapisanie hasła i loginu. Domyślnie zapisanie danych trwa 15 minut, potem znów należy wpisywać hasło i login by wysłać aktualizację. I to rozwiązanie mi się podoba :grinning:&lt;/p&gt;

&lt;h1 id=&quot;2zapamiętanie-loginu-i-hasła&quot;&gt;2.Zapamiętanie loginu i hasła&lt;/h1&gt;
&lt;p&gt;Aby tymczasowo zapisać dane logowania dla git’a  w terminalu należy wpisać&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; credential.helper cache

&lt;span class=&quot;c&quot;&gt;# zapisz dane logowania w pamięci na określony czas&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Aby zmienić czas z 15 minut na zdefiniowany przez nas na terminalu należy wpisać poniższy kod,&lt;br /&gt;
gdzie 3600 = 60 * 60 / ustawienia podawane są w sekundach /:&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; credential.helper &lt;span class=&quot;s1&quot;&gt;'cache --timeout=3600'&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# zapisz dane logowania w pamięci na określony czas 60*60=3600 sekund&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://help.github.com/en/github/using-git/caching-your-github-password-in-git&quot; target=&quot;_blank&quot;&gt;Sposoby cachowania danych logowania do Gita dla innych wersji systemu&lt;/a&gt;&lt;/p&gt;</content><author><name>Jozdowska Edyta</name></author><category term="[&quot;git&quot;]" /><category term="git" /><summary type="html">Krótka informacja jak tymczasowo zapamiętać hasło i login dla githuba.</summary></entry></feed>